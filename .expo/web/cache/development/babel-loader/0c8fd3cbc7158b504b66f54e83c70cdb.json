{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ViewContact() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ContactList = _useState4[0],\n    SetContactList = _useState4[1];\n  var fetchUser = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var id = yield AsyncStorage.getItem('@id');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/contacts', {\n          method: 'GET',\n          headers: {\n            'X-Authorization': token,\n            'Content-Type': 'application/json'\n          }\n        });\n        var data = yield response.json();\n        console.log(data, ' this is data');\n        setUser(data);\n        yield AsyncStorage.setItem('user', data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  fetchUser();\n  if (!user) {\n    return _jsx(Text, {\n      style: styles.error,\n      children: \"401 Unauthorised...\"\n    });\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.field,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Contacts\"\n      }), ContactList.map(function (Contact) {\n        return _jsxs(View, {\n          children: [_jsxs(Text, {\n            style: styles.chat,\n            children: [chat.id, \" \", chat.name]\n          }), _jsxs(Text, {\n            children: [\"User ID: \", chat.creator.user_id, '\\n', \"Name: \", chat.creator.first_name, \" \", chat.creator.last_name, '\\n', \"E-mail: \", chat.creator.email]\n          })]\n        }, chat.id);\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ViewContact;","map":{"version":3,"names":["React","useState","TouchableOpacity","AsyncStorage","ViewContact","user","setUser","ContactList","SetContactList","fetchUser","token","getItem","id","response","fetch","method","headers","data","json","console","log","setItem","error","styles","container","field","title","map","Contact","chat","name","creator","user_id","first_name","last_name","email","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","button","paddingVertical","paddingHorizontal","borderRadius","marginTop","color","buttonText"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/ViewContact.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, TextInput, Alert } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction ViewContact() {\n  const [user, setUser] = useState('')\n  const [ContactList, SetContactList] = useState([])\n\n  const fetchUser = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const id = await AsyncStorage.getItem('@id')\n\n      const response = await fetch('http://localhost:3333/api/1.0.0/contacts', {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json',\n        },\n      })\n      const data = await response.json()\n      console.log(data, ' this is data')\n      setUser(data)\n      await AsyncStorage.setItem('user', data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  fetchUser()\n\n  if (!user) {\n    return <Text style={styles.error}>401 Unauthorised...</Text>\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.field}>\n        <Text style={styles.title}>Contacts</Text>\n        {ContactList.map((Contact) => (\n          <View key={chat.id}>\n            <Text style={styles.chat}>\n              {chat.id} {chat.name}\n            </Text>\n            <Text>\n              User ID: {chat.creator.user_id}\n              {'\\n'}\n              Name: {chat.creator.first_name} {chat.creator.last_name}\n              {'\\n'}\n              E-mail: {chat.creator.email}\n            </Text>\n          </View>\n        ))}\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default ViewContact\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}