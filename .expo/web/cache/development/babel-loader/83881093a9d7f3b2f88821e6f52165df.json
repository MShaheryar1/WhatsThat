{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport Login from \"./Login\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction ContactScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: \"Contacts\"\n    })\n  });\n}\nfunction ChatsScreen() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: \"Chat Screen\"\n    })\n  });\n}\nfunction ProfileScreen(_ref) {\n  var route = _ref.route;\n  var handleLogout = route.params.handleLogout;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Profile Screen\"\n    }), _jsx(TouchableOpacity, {\n      onPress: handleLogout,\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Logout\"\n      })\n    })]\n  });\n}\nfunction Chats(_ref2) {\n  var navigation = _ref2.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  useEffect(function () {\n    var getToken = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          var value = yield AsyncStorage.getItem('@token');\n          if (value !== null) {\n            setToken(value);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return function getToken() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    getToken();\n  }, []);\n  var handleLogout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem('@token');\n        setToken(null);\n        navigation.navigate('Home');\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleLogout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  if (!token) {\n    return _jsx(Login, {\n      setToken: setToken\n    });\n  }\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref5) {\n      var route = _ref5.route;\n      return {};\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        tabBarLabel: 'Profile',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color,\n            size = _ref6.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"person\",\n            color: color,\n            size: size\n          });\n        }\n      },\n      initialParams: {\n        handleLogout: handleLogout\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ChatsScreen\",\n      component: ChatsScreen,\n      options: {\n        tabBarLabel: 'Chats',\n        tabBarIcon: function tabBarIcon(_ref7) {\n          var color = _ref7.color,\n            size = _ref7.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"chat\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ContactsScreen\",\n      component: ContactScreen,\n      options: {\n        tabBarLabel: 'contacts',\n        tabBarIcon: function tabBarIcon(_ref8) {\n          var color = _ref8.color,\n            size = _ref8.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"contacts\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: '#1c1c1e',\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","MaterialCommunityIcons","createBottomTabNavigator","Icon","Login","Tab","ContactScreen","styles","container","title","ChatsScreen","ProfileScreen","route","handleLogout","params","button","buttonText","Chats","navigation","token","setToken","getToken","value","getItem","error","console","log","removeItem","navigate","tabBarLabel","tabBarIcon","color","size","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","padding","borderRadius"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from 'react-native-vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Icon from 'react-native-vector-icons/MaterialIcons';\nimport Login from './Login';\n\nconst Tab = createBottomTabNavigator();\n\nfunction ContactScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Contacts</Text>\n    </View>\n  );\n}\n\nfunction ChatsScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Chat Screen</Text>\n    </View>\n  );\n}\n\nfunction ProfileScreen({ route }) {\n  const handleLogout = route.params.handleLogout;\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Profile Screen</Text>\n\n      <TouchableOpacity onPress={handleLogout} style={styles.button}>\n        <Text style={styles.buttonText}>Logout</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n// The functions below check if the user has logged in using token, if the token\n//is found, it is set using settoken function otherwise null\n//if the token state is null, login is rendered passing settoken function.\n//if token state is not null, user has logged in, chat component is rendered\nfunction Chats({ navigation }) {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    // Check if user has a token stored in async storage\n    const getToken = async () => {\n      try {\n        const value = await AsyncStorage.getItem('@token');\n        if (value !== null) {\n          setToken(value);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getToken();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      await AsyncStorage.removeItem('@token');\n      setToken(null);\n      navigation.navigate('Home');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!token) {\n    // Render Login component if user has not logged in yet\n    return <Login setToken={setToken} />;\n  }\n\n  // Render Chats component if user has logged in\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n\n\n      })}\n    >\n\n\n<Tab.Screen name=\"ProfileScreen\" component={ProfileScreen}\n        options={{\n          tabBarLabel: 'Profile',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"person\" color={color} size={size} />\n          ),\n        }}\n        initialParams={{ handleLogout: handleLogout }}\n        \n      />\n      <Tab.Screen name=\"ChatsScreen\" component={ChatsScreen}\n        options={{\n          tabBarLabel: 'Chats',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"chat\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen name=\"ContactsScreen\" component={ContactScreen}\n        options={{\n          tabBarLabel: 'contacts',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"contacts\" color={color} size={size} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: '#1c1c1e',\n    padding: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n});\n\nexport default Chats;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAEnD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,sBAAsB;AAC/B,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,IAAI;AACX,OAAOC,KAAK;AAAgB;AAAA;AAE5B,IAAMC,GAAG,GAAGH,wBAAwB,EAAE;AAEtC,SAASI,aAAa,GAAG;EACvB,OACE,KAAC,IAAI;IAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAA,UAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,UAAC;IAAQ;EAAO,EACrC;AAEX;AAEA,SAASC,WAAW,GAAG;EACrB,OACE,KAAC,IAAI;IAAC,KAAK,EAAEH,MAAM,CAACC,SAAU;IAAA,UAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,UAAC;IAAW;EAAO,EACxC;AAEX;AAEA,SAASE,aAAa,OAAY;EAAA,IAATC,KAAK,QAALA,KAAK;EAC5B,IAAMC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACD,YAAY;EAC9C,OACE,MAAC,IAAI;IAAC,KAAK,EAAEN,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,UAAC;IAAc,EAAO,EAEhD,KAAC,gBAAgB;MAAC,OAAO,EAAEI,YAAa;MAAC,KAAK,EAAEN,MAAM,CAACQ,MAAO;MAAA,UAC5D,KAAC,IAAI;QAAC,KAAK,EAAER,MAAM,CAACS,UAAW;QAAA,UAAC;MAAM;IAAO,EAC5B;EAAA,EACd;AAEX;AAKA,SAASC,KAAK,QAAiB;EAAA,IAAdC,UAAU,SAAVA,UAAU;EACzB,gBAA0BpB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCqB,KAAK;IAAEC,QAAQ;EAEtBrB,SAAS,CAAC,YAAM;IAEd,IAAMsB,QAAQ;MAAA,8BAAG,aAAY;QAC3B,IAAI;UACF,IAAMC,KAAK,SAAStB,YAAY,CAACuB,OAAO,CAAC,QAAQ,CAAC;UAClD,IAAID,KAAK,KAAK,IAAI,EAAE;YAClBF,QAAQ,CAACE,KAAK,CAAC;UACjB;QACF,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB;MACF,CAAC;MAAA,gBATKH,QAAQ;QAAA;MAAA;IAAA,GASb;IAEDA,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMR,YAAY;IAAA,8BAAG,aAAY;MAC/B,IAAI;QACF,MAAMb,YAAY,CAAC2B,UAAU,CAAC,QAAQ,CAAC;QACvCP,QAAQ,CAAC,IAAI,CAAC;QACdF,UAAU,CAACU,QAAQ,CAAC,MAAM,CAAC;MAC7B,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,gBARKX,YAAY;MAAA;IAAA;EAAA,GAQjB;EAED,IAAI,CAACM,KAAK,EAAE;IAEV,OAAO,KAAC,KAAK;MAAC,QAAQ,EAAEC;IAAS,EAAG;EACtC;EAGA,OACE,MAAC,GAAG,CAAC,SAAS;IACZ,aAAa,EAAE;MAAA,IAAGR,KAAK,SAALA,KAAK;MAAA,OAAQ,CAG/B,CAAC;IAAA,CAAE;IAAA,WAIT,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,eAAe;MAAC,SAAS,EAAED,aAAc;MAClD,OAAO,EAAE;QACPkB,WAAW,EAAE,SAAS;QACtBC,UAAU,EAAE;UAAA,IAAGC,KAAK,SAALA,KAAK;YAAEC,IAAI,SAAJA,IAAI;UAAA,OACxB,KAAC,sBAAsB;YAAC,IAAI,EAAC,QAAQ;YAAC,KAAK,EAAED,KAAM;YAAC,IAAI,EAAEC;UAAK,EAAG;QAAA;MAEtE,CAAE;MACF,aAAa,EAAE;QAAEnB,YAAY,EAAEA;MAAa;IAAE,EAE9C,EACF,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,aAAa;MAAC,SAAS,EAAEH,WAAY;MACpD,OAAO,EAAE;QACPmB,WAAW,EAAE,OAAO;QACpBC,UAAU,EAAE;UAAA,IAAGC,KAAK,SAALA,KAAK;YAAEC,IAAI,SAAJA,IAAI;UAAA,OACxB,KAAC,sBAAsB;YAAC,IAAI,EAAC,MAAM;YAAC,KAAK,EAAED,KAAM;YAAC,IAAI,EAAEC;UAAK,EAAG;QAAA;MAEpE;IAAE,EACF,EACF,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,gBAAgB;MAAC,SAAS,EAAE1B,aAAc;MACzD,OAAO,EAAE;QACPuB,WAAW,EAAE,UAAU;QACvBC,UAAU,EAAE;UAAA,IAAGC,KAAK,SAALA,KAAK;YAAEC,IAAI,SAAJA,IAAI;UAAA,OACxB,KAAC,sBAAsB;YAAC,IAAI,EAAC,UAAU;YAAC,KAAK,EAAED,KAAM;YAAC,IAAI,EAAEC;UAAK,EAAG;QAAA;MAExE;IAAE,EACF;EAAA,EACY;AAGpB;AAEA,IAAMzB,MAAM,GAAG0B,UAAU,CAACC,MAAM,CAAC;EAC/B1B,SAAS,EAAE;IACT2B,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACD7B,KAAK,EAAE;IACL8B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACD1B,MAAM,EAAE;IACNuB,eAAe,EAAE,SAAS;IAC1BI,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACD3B,UAAU,EAAE;IACVe,KAAK,EAAE,MAAM;IACbQ,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAetB,KAAK"},"metadata":{},"sourceType":"module"}