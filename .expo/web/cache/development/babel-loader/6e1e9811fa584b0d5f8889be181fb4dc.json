{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Singlechat() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    chat_id = _useState2[0],\n    setChatId = _useState2[1];\n  var _chat = chat,\n    name = _chat.name,\n    creator = _chat.creator,\n    members = _chat.members,\n    messages = _chat.messages;\n  var navigation = useNavigation();\n  var fsinglechat = function () {\n    var _ref2 = _asyncToGenerator(function* (_ref) {\n      var chat = _ref.chat;\n      var token = yield AsyncStorage.getItem('@token');\n      fetch('http://localhost:3333/api/1.0.0/chat/' + chat_id, {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setChat(data);\n        console.log(data.creator, 'data creator');\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    });\n    return function fsinglechat(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Single Chat Details\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      defaultValue: chat_id,\n      placeholder: \"Enter ID Number\",\n      value: chat_id,\n      onChangeText: function onChangeText(text) {\n        return setChatId(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: fsinglechat,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Get chat\"\n      })\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: {\n          fontSize: 24,\n          fontWeight: 'bold'\n        },\n        children: name\n      }), _jsxs(Text, {\n        children: [\"Creator: \", creator.first_name, \" \", creator.last_name]\n      }), _jsxs(Text, {\n        children: [\"Members: \", members.length]\n      }), messages.map(function (message) {\n        return _jsxs(View, {\n          style: {\n            marginVertical: 10\n          },\n          children: [_jsxs(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: [message.author.first_name, \":\"]\n          }), _jsx(Text, {\n            children: message.message\n          })]\n        }, message.message_id);\n      })]\n    }), '}', \";\", _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Back\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white',\n    placeholder: {\n      fontSize: 50\n    }\n  },\n  error: {\n    fontSize: 16,\n    color: 'red'\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default Singlechat;","map":{"version":3,"names":["React","useState","useEffect","TextInput","AsyncStorage","useNavigation","Singlechat","chat_id","setChatId","chat","name","creator","members","messages","navigation","fsinglechat","token","getItem","fetch","method","headers","then","response","json","data","setChat","console","log","catch","error","styles","container","title","input","text","button","buttonText","fontSize","fontWeight","first_name","last_name","length","map","message","marginVertical","author","message_id","goBack","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","label","marginTop","alignSelf","marginLeft","borderWidth","borderColor","borderRadius","padding","margin","width","color","placeholder","paddingVertical","paddingHorizontal"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Singlechat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { useNavigation } from '@react-navigation/native'\n\nfunction Singlechat() {\n  const [chat_id, setChatId] = useState('')\n  //   const [chat, setChat] = useState({\n  //     name: '',\n  //     creator: { user_id: '', first_name: '', last_name: '' },\n  //     members: { user_id: '', first_name: '', last_name: '' },\n  //     messages: {},\n  //   })\n  const { name, creator, members, messages } = chat\n\n  const navigation = useNavigation()\n\n  const fsinglechat = async ({ chat }) => {\n    const token = await AsyncStorage.getItem('@token')\n\n    fetch('http://localhost:3333/api/1.0.0/chat/' + chat_id, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setChat(data)\n        console.log(data.creator, 'data creator')\n        // console.log(data, 'this is data')\n\n        // console.log(typeof data)\n        // console.log(data[creator], 'hello sherry')\n        // console.log(Object.keys(data))\n        // console.log(data.creator, ' data creator')\n        // console.log(chat.creator, 'chat creator')\n      })\n      .catch((error) => console.log(error))\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Single Chat Details</Text>\n      <TextInput\n        style={styles.input}\n        defaultValue={chat_id}\n        placeholder=\"Enter ID Number\"\n        value={chat_id}\n        onChangeText={(text) => setChatId(text)}\n      />\n      <TouchableOpacity style={styles.button} onPress={fsinglechat}>\n        <Text style={styles.buttonText}>Get chat</Text>\n      </TouchableOpacity>\n      <View>\n        <Text style={{ fontSize: 24, fontWeight: 'bold' }}>{name}</Text>\n        <Text>\n          Creator: {creator.first_name} {creator.last_name}\n        </Text>\n        <Text>Members: {members.length}</Text>\n\n        {messages.map((message) => (\n          <View key={message.message_id} style={{ marginVertical: 10 }}>\n            <Text style={{ fontWeight: 'bold' }}>\n              {message.author.first_name}:\n            </Text>\n            <Text>{message.message}</Text>\n          </View>\n        ))}\n      </View>\n      {'}'};\n      {/* {chat && (\n        // render the chat details once chat state is not null\n        <View>\n          <Text style={styles.label}>Chat Name:</Text>\n          <TextInput style={styles.input} value={chat.name} editable={false} />\n\n          <Text style={styles.label}> Creator</Text>\n          <TextInput\n            style={styles.input}\n            value={chat.creator.user_id}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={`${chat.creator.first_name}\\n${chat.creator.last_name}`}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={chat.creator.email}\n            editable={false}\n          />\n          <Text style={styles.label}> Members</Text>\n          <TextInput\n            style={styles.input}\n            value={chat.members.user_id}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={`${chat.members.first_name}\\n${chat.members.last_name}`}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={chat.members.email}\n            editable={false}\n          />\n          <Text style={styles.label}> Last Message</Text>\n          <TextInput\n            style={styles.input}\n            value={chat.messages}\n            editable={false}\n          />\n        </View>\n      )} */}\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.goBack()}\n      >\n        <Text style={styles.buttonText}>Back</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white',\n    placeholder: {\n      fontSize: 50,\n    },\n  },\n  error: {\n    fontSize: 16,\n    color: 'red',\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default Singlechat\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAElD,SAASC,SAAS,QAAQ,8BAA8B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,aAAa,QAAQ,0BAA0B;AAAA;AAAA;AAExD,SAASC,UAAU,GAAG;EACpB,gBAA6BL,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAlCM,OAAO;IAAEC,SAAS;EAOzB,YAA6CC,IAAI;IAAzCC,IAAI,SAAJA,IAAI;IAAEC,OAAO,SAAPA,OAAO;IAAEC,OAAO,SAAPA,OAAO;IAAEC,QAAQ,SAARA,QAAQ;EAExC,IAAMC,UAAU,GAAGT,aAAa,EAAE;EAElC,IAAMU,WAAW;IAAA,8BAAG,iBAAoB;MAAA,IAAXN,IAAI,QAAJA,IAAI;MAC/B,IAAMO,KAAK,SAASZ,YAAY,CAACa,OAAO,CAAC,QAAQ,CAAC;MAElDC,KAAK,CAAC,uCAAuC,GAAGX,OAAO,EAAE;QACvDY,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,iBAAiB,EAAEJ,KAAK;UACxB,cAAc,EAAE;QAClB;MACF,CAAC,CAAC,CACCK,IAAI,CAAC,UAACC,QAAQ;QAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;MAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,IAAI,EAAK;QACdC,OAAO,CAACD,IAAI,CAAC;QACbE,OAAO,CAACC,GAAG,CAACH,IAAI,CAACb,OAAO,EAAE,cAAc,CAAC;MAQ3C,CAAC,CAAC,CACDiB,KAAK,CAAC,UAACC,KAAK;QAAA,OAAKH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAAA,EAAC;IACzC,CAAC;IAAA,gBAvBKd,WAAW;MAAA;IAAA;EAAA,GAuBhB;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEe,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,UAAC;IAAmB,EAAO,EACrD,KAAC,SAAS;MACR,KAAK,EAAEF,MAAM,CAACG,KAAM;MACpB,YAAY,EAAE1B,OAAQ;MACtB,WAAW,EAAC,iBAAiB;MAC7B,KAAK,EAAEA,OAAQ;MACf,YAAY,EAAE,sBAAC2B,IAAI;QAAA,OAAK1B,SAAS,CAAC0B,IAAI,CAAC;MAAA;IAAC,EACxC,EACF,KAAC,gBAAgB;MAAC,KAAK,EAAEJ,MAAM,CAACK,MAAO;MAAC,OAAO,EAAEpB,WAAY;MAAA,UAC3D,KAAC,IAAI;QAAC,KAAK,EAAEe,MAAM,CAACM,UAAW;QAAA,UAAC;MAAQ;IAAO,EAC9B,EACnB,MAAC,IAAI;MAAA,WACH,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,QAAQ,EAAE,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAA,UAAE5B;MAAI,EAAQ,EAChE,MAAC,IAAI;QAAA,WAAC,WACK,EAACC,OAAO,CAAC4B,UAAU,EAAC,GAAC,EAAC5B,OAAO,CAAC6B,SAAS;MAAA,EAC3C,EACP,MAAC,IAAI;QAAA,WAAC,WAAS,EAAC5B,OAAO,CAAC6B,MAAM;MAAA,EAAQ,EAErC5B,QAAQ,CAAC6B,GAAG,CAAC,UAACC,OAAO;QAAA,OACpB,MAAC,IAAI;UAA0B,KAAK,EAAE;YAAEC,cAAc,EAAE;UAAG,CAAE;UAAA,WAC3D,MAAC,IAAI;YAAC,KAAK,EAAE;cAAEN,UAAU,EAAE;YAAO,CAAE;YAAA,WACjCK,OAAO,CAACE,MAAM,CAACN,UAAU,EAAC,GAC7B;UAAA,EAAO,EACP,KAAC,IAAI;YAAA,UAAEI,OAAO,CAACA;UAAO,EAAQ;QAAA,GAJrBA,OAAO,CAACG,UAAU,CAKtB;MAAA,CACR,CAAC;IAAA,EACG,EACN,GAAG,EAAC,GACL,EA8CA,KAAC,gBAAgB;MACf,KAAK,EAAEhB,MAAM,CAACK,MAAO;MACrB,OAAO,EAAE;QAAA,OAAMrB,UAAU,CAACiC,MAAM,EAAE;MAAA,CAAC;MAAA,UAEnC,KAAC,IAAI;QAAC,KAAK,EAAEjB,MAAM,CAACM,UAAW;QAAA,UAAC;MAAI;IAAO,EAC1B;EAAA,EACd;AAEX;AACA,IAAMN,MAAM,GAAGkB,UAAU,CAACC,MAAM,CAAC;EAC/BlB,SAAS,EAAE;IACTmB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDrB,KAAK,EAAE;IACLK,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBgB,YAAY,EAAE;EAChB,CAAC;EACDC,KAAK,EAAE;IACLlB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBkB,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,YAAY;IACvBC,UAAU,EAAE;EACd,CAAC;EACDzB,KAAK,EAAE;IACL0B,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,GAAG;IACV3B,QAAQ,EAAE,EAAE;IACZ4B,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE;MACX7B,QAAQ,EAAE;IACZ;EACF,CAAC;EACDR,KAAK,EAAE;IACLQ,QAAQ,EAAE,EAAE;IACZ4B,KAAK,EAAE;EACT,CAAC;EACD9B,MAAM,EAAE;IACNkB,eAAe,EAAE,OAAO;IACxBc,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBP,YAAY,EAAE,CAAC;IACfL,SAAS,EAAE,EAAE;IACbS,KAAK,EAAE;EACT,CAAC;EACD7B,UAAU,EAAE;IACV6B,KAAK,EAAE,OAAO;IACd5B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAehC,UAAU"},"metadata":{},"sourceType":"module"}