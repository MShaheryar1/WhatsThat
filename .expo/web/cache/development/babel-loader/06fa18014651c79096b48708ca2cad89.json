{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { checkVersion } from \"../platform-specific/checkVersion\";\nexport var NativeReanimated = function () {\n  function NativeReanimated() {\n    _classCallCheck(this, NativeReanimated);\n    var native = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    _defineProperty(this, \"native\", void 0);\n    _defineProperty(this, \"InnerNativeModule\", void 0);\n    if (global.__reanimatedModuleProxy === undefined && native) {\n      var ReanimatedModule = NativeModules.ReanimatedModule;\n      ReanimatedModule === null || ReanimatedModule === void 0 ? void 0 : ReanimatedModule.installTurboModule();\n    }\n    this.InnerNativeModule = global.__reanimatedModuleProxy;\n    this.native = native;\n    if (native) {\n      if (this.InnerNativeModule === undefined) {\n        console.error(\"[Reanimated] The native part of Reanimated doesn't seem to be initialized. This could be caused by\\n  - not rebuilding the app after installing or upgrading Reanimated\\n  - trying to run Reanimated on an unsupported platform\\n  - running in a brownfield app without manually initializing the native library\");\n        return;\n      }\n      checkVersion();\n    }\n  }\n  _createClass(NativeReanimated, [{\n    key: \"installCoreFunctions\",\n    value: function installCoreFunctions(callGuard, valueUnpacker) {\n      return this.InnerNativeModule.installCoreFunctions(callGuard, valueUnpacker);\n    }\n  }, {\n    key: \"makeShareableClone\",\n    value: function makeShareableClone(value, shouldPersistRemote) {\n      return this.InnerNativeModule.makeShareableClone(value, shouldPersistRemote);\n    }\n  }, {\n    key: \"makeSynchronizedDataHolder\",\n    value: function makeSynchronizedDataHolder(valueRef) {\n      return this.InnerNativeModule.makeSynchronizedDataHolder(valueRef);\n    }\n  }, {\n    key: \"getDataSynchronously\",\n    value: function getDataSynchronously(ref) {\n      return this.InnerNativeModule.getDataSynchronously(ref);\n    }\n  }, {\n    key: \"updateDataSynchronously\",\n    value: function updateDataSynchronously(ref, value) {\n      this.InnerNativeModule.updateDataSynchronously(ref, value);\n    }\n  }, {\n    key: \"scheduleOnUI\",\n    value: function scheduleOnUI(shareable) {\n      return this.InnerNativeModule.scheduleOnUI(shareable);\n    }\n  }, {\n    key: \"registerSensor\",\n    value: function registerSensor(sensorType, interval, iosReferenceFrame, handler) {\n      return this.InnerNativeModule.registerSensor(sensorType, interval, iosReferenceFrame, handler);\n    }\n  }, {\n    key: \"unregisterSensor\",\n    value: function unregisterSensor(sensorId) {\n      return this.InnerNativeModule.unregisterSensor(sensorId);\n    }\n  }, {\n    key: \"registerEventHandler\",\n    value: function registerEventHandler(eventHash, eventHandler) {\n      return this.InnerNativeModule.registerEventHandler(eventHash, eventHandler);\n    }\n  }, {\n    key: \"unregisterEventHandler\",\n    value: function unregisterEventHandler(id) {\n      return this.InnerNativeModule.unregisterEventHandler(id);\n    }\n  }, {\n    key: \"getViewProp\",\n    value: function getViewProp(viewTag, propName, callback) {\n      return this.InnerNativeModule.getViewProp(viewTag, propName, callback);\n    }\n  }, {\n    key: \"configureLayoutAnimation\",\n    value: function configureLayoutAnimation(viewTag, type, sharedTransitionTag, config) {\n      this.InnerNativeModule.configureLayoutAnimation(viewTag, type, sharedTransitionTag, config);\n    }\n  }, {\n    key: \"enableLayoutAnimations\",\n    value: function enableLayoutAnimations(flag) {\n      this.InnerNativeModule.enableLayoutAnimations(flag);\n    }\n  }, {\n    key: \"configureProps\",\n    value: function configureProps(uiProps, nativeProps) {\n      this.InnerNativeModule.configureProps(uiProps, nativeProps);\n    }\n  }, {\n    key: \"subscribeForKeyboardEvents\",\n    value: function subscribeForKeyboardEvents(handler, isStatusBarTranslucent) {\n      return this.InnerNativeModule.subscribeForKeyboardEvents(handler, isStatusBarTranslucent);\n    }\n  }, {\n    key: \"unsubscribeFromKeyboardEvents\",\n    value: function unsubscribeFromKeyboardEvents(listenerId) {\n      this.InnerNativeModule.unsubscribeFromKeyboardEvents(listenerId);\n    }\n  }]);\n  return NativeReanimated;\n}();","map":{"version":3,"mappings":"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","names":["checkVersion","NativeReanimated","constructor","native","_defineProperty","global","__reanimatedModuleProxy","undefined","ReanimatedModule","NativeModules","installTurboModule","InnerNativeModule","console","error","installCoreFunctions","callGuard","valueUnpacker","makeShareableClone","value","shouldPersistRemote","makeSynchronizedDataHolder","valueRef","getDataSynchronously","ref","updateDataSynchronously","scheduleOnUI","shareable","registerSensor","sensorType","interval","iosReferenceFrame","handler","unregisterSensor","sensorId","registerEventHandler","eventHash","eventHandler","unregisterEventHandler","id","getViewProp","viewTag","propName","callback","configureLayoutAnimation","type","sharedTransitionTag","config","enableLayoutAnimations","flag","configureProps","uiProps","nativeProps","subscribeForKeyboardEvents","isStatusBarTranslucent","unsubscribeFromKeyboardEvents","listenerId"],"sources":["NativeReanimated.ts"],"sourcesContent":["import { NativeModules } from 'react-native';\nimport {\n  ShareableRef,\n  ShareableSyncDataHolderRef,\n  Value3D,\n  ValueRotation,\n} from '../commonTypes';\nimport {\n  LayoutAnimationFunction,\n  LayoutAnimationType,\n} from '../layoutReanimation';\nimport { checkVersion } from '../platform-specific/checkVersion';\n\nexport class NativeReanimated {\n  native: boolean;\n  private InnerNativeModule: any;\n\n  constructor(native = true) {\n    if (global.__reanimatedModuleProxy === undefined && native) {\n      const { ReanimatedModule } = NativeModules;\n      ReanimatedModule?.installTurboModule();\n    }\n    this.InnerNativeModule = global.__reanimatedModuleProxy;\n    this.native = native;\n    if (native) {\n      if (this.InnerNativeModule === undefined) {\n        console.error(\n          `[Reanimated] The native part of Reanimated doesn't seem to be initialized. This could be caused by\\n\\\n  - not rebuilding the app after installing or upgrading Reanimated\\n\\\n  - trying to run Reanimated on an unsupported platform\\n\\\n  - running in a brownfield app without manually initializing the native library`\n        );\n        return;\n      }\n      checkVersion();\n    }\n  }\n\n  installCoreFunctions(\n    callGuard: <T extends Array<any>, U>(\n      fn: (...args: T) => U,\n      ...args: T\n    ) => void,\n    valueUnpacker: <T>(value: T) => T\n  ): void {\n    return this.InnerNativeModule.installCoreFunctions(\n      callGuard,\n      valueUnpacker\n    );\n  }\n\n  makeShareableClone<T>(\n    value: T,\n    shouldPersistRemote: boolean\n  ): ShareableRef<T> {\n    return this.InnerNativeModule.makeShareableClone(\n      value,\n      shouldPersistRemote\n    );\n  }\n\n  makeSynchronizedDataHolder<T>(\n    valueRef: ShareableRef<T>\n  ): ShareableSyncDataHolderRef<T> {\n    return this.InnerNativeModule.makeSynchronizedDataHolder(valueRef);\n  }\n\n  getDataSynchronously<T>(ref: ShareableSyncDataHolderRef<T>): T {\n    return this.InnerNativeModule.getDataSynchronously(ref);\n  }\n\n  updateDataSynchronously<T>(\n    ref: ShareableSyncDataHolderRef<T>,\n    value: T\n  ): void {\n    this.InnerNativeModule.updateDataSynchronously(ref, value);\n  }\n\n  scheduleOnUI<T>(shareable: ShareableRef<T>) {\n    return this.InnerNativeModule.scheduleOnUI(shareable);\n  }\n\n  registerSensor<T>(\n    sensorType: number,\n    interval: number,\n    iosReferenceFrame: number,\n    handler: ShareableRef<T> | ((data: Value3D | ValueRotation) => void)\n  ) {\n    return this.InnerNativeModule.registerSensor(\n      sensorType,\n      interval,\n      iosReferenceFrame,\n      handler\n    );\n  }\n\n  unregisterSensor(sensorId: number) {\n    return this.InnerNativeModule.unregisterSensor(sensorId);\n  }\n\n  registerEventHandler<T>(\n    eventHash: string,\n    eventHandler: ShareableRef<T>\n  ): string {\n    return this.InnerNativeModule.registerEventHandler(eventHash, eventHandler);\n  }\n\n  unregisterEventHandler(id: string): void {\n    return this.InnerNativeModule.unregisterEventHandler(id);\n  }\n\n  getViewProp<T>(\n    viewTag: string,\n    propName: string,\n    callback?: (result: T) => void\n  ): Promise<T> {\n    return this.InnerNativeModule.getViewProp(viewTag, propName, callback);\n  }\n\n  configureLayoutAnimation(\n    viewTag: number,\n    type: LayoutAnimationType,\n    sharedTransitionTag: string,\n    config: ShareableRef<Keyframe | LayoutAnimationFunction>\n  ) {\n    this.InnerNativeModule.configureLayoutAnimation(\n      viewTag,\n      type,\n      sharedTransitionTag,\n      config\n    );\n  }\n\n  enableLayoutAnimations(flag: boolean): void {\n    this.InnerNativeModule.enableLayoutAnimations(flag);\n  }\n\n  configureProps(uiProps: string[], nativeProps: string[]): void {\n    this.InnerNativeModule.configureProps(uiProps, nativeProps);\n  }\n\n  subscribeForKeyboardEvents(\n    handler: ShareableRef<number>,\n    isStatusBarTranslucent: boolean\n  ): number {\n    return this.InnerNativeModule.subscribeForKeyboardEvents(\n      handler,\n      isStatusBarTranslucent\n    );\n  }\n\n  unsubscribeFromKeyboardEvents(listenerId: number): void {\n    this.InnerNativeModule.unsubscribeFromKeyboardEvents(listenerId);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}