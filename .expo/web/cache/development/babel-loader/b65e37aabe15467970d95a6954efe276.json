{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Addchat() {\n  var _useState = useState(name),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var navigation = useNavigation();\n  var addtochat = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var id = yield AsyncStorage.getItem('@id');\n        var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat\", {\n          method: 'POST',\n          headers: {\n            'X-Authorization': token,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: name\n          })\n        });\n        var data = yield response.json();\n        console.log(data, ' this is data');\n        yield AsyncStorage.setItem('user', data);\n      } catch (error) {\n        console.error(error);\n        console.log('Chat created');\n      }\n    });\n    return function addtochat() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Create chat\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        defaultValue: name,\n        placeholder: 'Enter Chat Name',\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: addtochat,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"create chat\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Ionicons, {\n          name: \"ios-backspace-sharp\",\n          size: 30,\n          color: \"black\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  label: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    placeholder: {\n      fontSize: 20\n    }\n  }\n});\nexport default Addchat;","map":{"version":3,"names":["React","useState","TouchableOpacity","useNavigation","AsyncStorage","Ionicons","Addchat","name","setName","navigation","addtochat","token","getItem","id","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","setItem","error","styles","container","scrollContainer","title","input","text","button","buttonText","goBack","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderRadius","marginTop","color","label","placeholder"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Addchat.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, TextInput, ScrollView } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { useNavigation } from '@react-navigation/native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { Ionicons } from '@expo/vector-icons'\n\nfunction Addchat() {\n  const [name, setName] = useState(name)\n  const navigation = useNavigation()\n\n  const addtochat = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const id = await AsyncStorage.getItem('@id')\n\n      const response = await fetch(`http://localhost:3333/api/1.0.0/chat`, {\n        method: 'POST',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name }),\n      })\n      const data = await response.json()\n      console.log(data, ' this is data')\n      //   setUser(data)\n      await AsyncStorage.setItem('user', data)\n    } catch (error) {\n      console.error(error)\n      console.log('Chat created')\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <Text style={styles.title}>Create chat</Text>\n        <TextInput\n          style={styles.input}\n          defaultValue={name}\n          placeholder={'Enter Chat Name'}\n          value={name}\n          onChangeText={(text) => setName(text)}\n        />\n        <TouchableOpacity style={styles.button} onPress={addtochat}>\n          <Text style={styles.buttonText}>create chat</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.goBack()}\n        >\n          <Ionicons name=\"ios-backspace-sharp\" size={30} color=\"black\" />\n        </TouchableOpacity>\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  label: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  input: {\n    placeholder: {\n      fontSize: 20,\n    },\n  },\n})\n\nexport default Addchat\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}