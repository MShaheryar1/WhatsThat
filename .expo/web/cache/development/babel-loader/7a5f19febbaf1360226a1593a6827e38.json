{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Press } from \"react-native-web/dist/index\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Login from \"./Login\";\nimport ChatsScreen from \"./chatsscreen\";\nimport ContactScreen from \"./contactscreen\";\nimport ProfileScreen from \"./profilescreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction Main(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  useEffect(function () {\n    var getToken = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var value = yield AsyncStorage.getItem('@token');\n          if (value !== null) {\n            setToken(value);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return function getToken() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getToken();\n  }, []);\n  var handleLogout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/logout', {\n          method: 'POST',\n          headers: {\n            'X-Authorization': _token,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          yield AsyncStorage.multiRemove(['@token', '@id']);\n          console.log(\"Token removed\");\n          navigation.navigate('Login');\n        } else {\n          var errorJson = yield response.json();\n          console.log('Logout failed:', errorJson.message);\n        }\n      } catch (error) {\n        console.log('Logout failed:', error);\n      }\n    });\n    return function handleLogout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (!token) {\n    return _jsx(Login, {\n      setToken: setToken\n    });\n  }\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: function options(_ref4) {\n        var navigation = _ref4.navigation;\n        return {\n          headerShown: false,\n          tabBarLabel: 'Profile',\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var size = _ref5.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"account-circle\",\n              color: \"green\",\n              size: size\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(TouchableOpacity, {\n              onPress: handleLogout,\n              children: _jsx(Text, {\n                style: styles.logoutButton,\n                children: \"Logout\"\n              })\n            });\n          }\n        };\n      },\n      initialParams: {\n        handleLogout: handleLogout\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ChatsScreen\",\n      component: ChatsScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Chats',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var size = _ref6.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"chat\",\n            color: \"green\",\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ContactsScreen\",\n      component: ContactScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Contacts',\n        tabBarIcon: function tabBarIcon(_ref7) {\n          var size = _ref7.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"contacts\",\n            color: \"green\",\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nexport default Main;","map":{"version":3,"names":["React","useState","useEffect","Press","AsyncStorage","MaterialCommunityIcons","createBottomTabNavigator","Login","ChatsScreen","ContactScreen","ProfileScreen","Tab","Main","navigation","token","setToken","getToken","value","getItem","error","console","log","handleLogout","response","fetch","method","headers","ok","multiRemove","navigate","errorJson","json","message","headerShown","tabBarLabel","tabBarIcon","size","headerRight","styles","logoutButton"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Press } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from 'react-native-vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Login from './Login';\nimport ChatsScreen from './chatsscreen';\nimport ContactScreen from './contactscreen';\nimport ProfileScreen from './profilescreen';\nconst Tab = createBottomTabNavigator();\nfunction Main({ navigation }) {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    // Check if user has a token stored in async storage to stay logged in\n    const getToken = async () => {\n      try {\n        const value = await AsyncStorage.getItem('@token');\n        if (value !== null) {\n          setToken(value);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getToken();\n  }, []);\n  const handleLogout = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token');\n  \n      const response = await fetch('http://localhost:3333/api/1.0.0/logout', {\n        method: 'POST',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (response.ok) {\n        // Logout was successful, remove all user data from async storage\n        await AsyncStorage.multiRemove(['@token', '@id']);\n  console.log(\"Token removed\");\n        // Navigate to login screen\n        navigation.navigate('Login');\n      } else {\n        // Logout failed, display error message\n        const errorJson = await response.json();\n        console.log('Logout failed:', errorJson.message);\n        // You can display the error message to the user using an alert or a Toast message\n      }\n    } catch (error) {\n      console.log('Logout failed:', error);\n      // You can display the error message to the user using an alert or a Toast message\n    }\n  };\n  \n\n  if (!token) {\n    // Render Login component if user has not logged in yet\n    return <Login setToken={setToken} />;\n  }\n\n  return (\n    <Tab.Navigator>\n      <Tab.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={({ navigation }) => ({\n          headerShown: false,\n          tabBarLabel: 'Profile',\n          tabBarIcon: ({ size }) => (\n            <MaterialCommunityIcons name=\"account-circle\" color=\"green\" size={size} />\n          ),\n          headerRight: () => (\n            <TouchableOpacity onPress={handleLogout}>\n              <Text style={styles.logoutButton}>Logout</Text>\n            </TouchableOpacity>\n          ),\n        })\n      }\n        initialParams={{ handleLogout: handleLogout }}\n      />\n      \n      <Tab.Screen\n        name=\"ChatsScreen\"\n        component={ChatsScreen}\n        options={{ headerShown: false,\n          tabBarLabel: 'Chats',\n          tabBarIcon: ({ size }) => (\n            <MaterialCommunityIcons name=\"chat\" color=\"green\" size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen name=\"ContactsScreen\" component={ContactScreen}\n        options={{ headerShown: false,\n          tabBarLabel: 'Contacts',\n          tabBarIcon: ({ size }) => (\n            <MaterialCommunityIcons name=\"contacts\"  color=\"green\" size={size}/>\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}