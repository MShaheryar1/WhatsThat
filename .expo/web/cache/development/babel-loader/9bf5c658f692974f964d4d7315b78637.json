{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ContactScreen() {\n  var navigation = useNavigation();\n  var AddContact = function AddContact() {\n    navigation.navigate('AddContact');\n  };\n  var ViewContact = function ViewContact() {\n    navigation.navigate('ViewContact');\n  };\n  var DeleteContact = function DeleteContact() {\n    navigation.navigate('DeleteContact');\n  };\n  var BlockContact = function BlockContact() {\n    navigation.navigate('BlockContact');\n  };\n  var ViewBlocked = function ViewBlocked() {\n    navigation.navigate('ViewBlocked');\n  };\n  var Unblock = function Unblock() {\n    navigation.navigate('Unblock');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Contacts\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: AddContact,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add Contact\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: ViewContact,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"View Contacts\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: DeleteContact,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Delete Contact\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: BlockContact,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Block Contact\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: ViewBlocked,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"View Blocked Contacts\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: Unblock,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Unblock\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 24,\n    marginTop: 20,\n    alignItems: 'center',\n    width: '80%'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ContactScreen;","map":{"version":3,"names":["React","useNavigation","ContactScreen","navigation","AddContact","navigate","ViewContact","DeleteContact","BlockContact","ViewBlocked","Unblock","styles","container","title","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderRadius","marginTop","width","color"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/contactscreen.js"],"sourcesContent":["import React from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\n\nfunction ContactScreen() {\n  const navigation = useNavigation()\n\n  const AddContact = () => {\n    navigation.navigate('AddContact')\n  }\n  const ViewContact = () => {\n    navigation.navigate('ViewContact')\n  }\n  const DeleteContact = () => {\n    navigation.navigate('DeleteContact')\n  }\n  const BlockContact = () => {\n    navigation.navigate('BlockContact')\n  }\n  const ViewBlocked = () => {\n    navigation.navigate('ViewBlocked')\n  }\n  const Unblock = () => {\n    navigation.navigate('Unblock')\n  }\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Contacts</Text>\n      <TouchableOpacity style={styles.button} onPress={AddContact}>\n        <Text style={styles.buttonText}>Add Contact</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={ViewContact}>\n        <Text style={styles.buttonText}>View Contacts</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={DeleteContact}>\n        <Text style={styles.buttonText}>Delete Contact</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={BlockContact}>\n        <Text style={styles.buttonText}>Block Contact</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={ViewBlocked}>\n        <Text style={styles.buttonText}>View Blocked Contacts</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={Unblock}>\n        <Text style={styles.buttonText}>Unblock</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 24,\n    marginTop: 20,\n    alignItems: 'center',\n    width: '80%',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default ContactScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}