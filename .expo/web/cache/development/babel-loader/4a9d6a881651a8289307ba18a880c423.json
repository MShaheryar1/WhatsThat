{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditUser() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  useEffect(function () {\n    AsyncStorage.getItem('userDetails').then(function (data) {\n      if (data !== null) {\n        var _JSON$parse = JSON.parse(data),\n          _name = _JSON$parse.name,\n          _email = _JSON$parse.email,\n          _password = _JSON$parse.password;\n        setName(_name);\n        setEmail(_email);\n        setPassword(_password);\n      }\n    });\n  }, []);\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!name || !email || !password) {\n        Alert.alert('Error', 'Please fill all fields');\n        return;\n      }\n      var userDetails = {\n        name: name,\n        email: email,\n        password: password\n      };\n      yield AsyncStorage.setItem('userDetails', JSON.stringify(userDetails));\n      Alert.alert('Success', 'User details updated successfully');\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"./assets/whatsthat.png\"),\n      style: {\n        width: 100,\n        height: 100,\n        display: 'flex',\n        marginLeft: 30,\n        marginBottom: 30\n      }\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Edit Details\"\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Name:\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your name\",\n      value: name,\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Email:\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Password:\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter your password\",\n      value: password,\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Save Changes\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white'\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default EditUser;","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","EditUser","name","setName","email","setEmail","password","setPassword","getItem","then","data","JSON","parse","handleSubmit","Alert","alert","userDetails","setItem","stringify","styles","container","require","width","height","display","marginLeft","marginBottom","title","label","input","text","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginTop","alignSelf","borderWidth","borderColor","borderRadius","padding","margin","color","paddingVertical","paddingHorizontal"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/EditUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image, TextInput, Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction EditUser() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    // Fetch user details from AsyncStorage and update the state\n    AsyncStorage.getItem('userDetails').then((data) => {\n      if (data !== null) {\n        const { name, email, password } = JSON.parse(data);\n        setName(name);\n        setEmail(email);\n        setPassword(password);\n      }\n    });\n  }, []);\n\n  const handleSubmit = async () => {\n    // Validate form fields\n    if (!name || !email || !password) {\n      Alert.alert('Error', 'Please fill all fields');\n      return;\n    }\n\n    // Save user details to AsyncStorage\n    const userDetails = { name, email, password };\n    await AsyncStorage.setItem('userDetails', JSON.stringify(userDetails));\n\n    // Show success message\n    Alert.alert('Success', 'User details updated successfully');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require('./assets/whatsthat.png')}\n        style={{ width: 100, height: 100, display: 'flex', marginLeft: 30, marginBottom: 30 }}\n      />\n      <Text style={styles.title}>Edit Details</Text>\n\n      <Text style={styles.label}>Name:</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your name\"\n        value={name}\n        onChangeText={(text) => setName(text)}\n      />\n\n      <Text style={styles.label}>Email:</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your email\"\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n      />\n\n      <Text style={styles.label}>Password:</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter your password\"\n        value={password}\n        secureTextEntry={true}\n        onChangeText={(text) => setPassword(text)}\n      />\n\n      <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n        <Text style={styles.buttonText}>Save Changes</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white',\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default EditUser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}