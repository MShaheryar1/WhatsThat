{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Singlechat() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    chat_id = _useState2[0],\n    setChatId = _useState2[1];\n  var ChatDetail = function ChatDetail(_ref) {\n    var chat = _ref.chat;\n    var name = chat.name,\n      creator = chat.creator,\n      members = chat.members,\n      messages = chat.messages;\n    var navigation = useNavigation();\n    var fsinglechat = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var token = yield AsyncStorage.getItem('@token');\n        fetch('http://localhost:3333/api/1.0.0/chat/' + chat_id, {\n          method: 'GET',\n          headers: {\n            'X-Authorization': token,\n            'Content-Type': 'application/json'\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          setChat(data);\n          console.log(data.creator, 'data creator');\n        }).catch(function (error) {\n          return console.log(error);\n        });\n      });\n      return function fsinglechat() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Single Chat Details\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        defaultValue: chat_id,\n        placeholder: \"Enter ID Number\",\n        value: chat_id,\n        onChangeText: function onChangeText(text) {\n          return setChatId(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: fsinglechat,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Get chat\"\n        })\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 24,\n            fontWeight: 'bold'\n          },\n          children: name\n        }), _jsxs(Text, {\n          children: [\"Creator: \", creator.first_name, \" \", creator.last_name]\n        }), _jsxs(Text, {\n          children: [\"Members: \", members.length]\n        }), messages.map(function (message) {\n          return _jsxs(View, {\n            style: {\n              marginVertical: 10\n            },\n            children: [_jsxs(Text, {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: [message.author.first_name, \":\"]\n            }), _jsx(Text, {\n              children: message.message\n            })]\n          }, message.message_id);\n        })]\n      }), '}', \";\", _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Back\"\n        })\n      })]\n    });\n  };\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#808000'\n    },\n    title: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginBottom: 20\n    },\n    label: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      marginTop: 10,\n      alignSelf: 'flex-start',\n      marginLeft: 20\n    },\n    input: {\n      borderWidth: 1,\n      borderColor: '#ccc',\n      borderRadius: 5,\n      padding: 10,\n      margin: 10,\n      width: 250,\n      fontSize: 16,\n      color: 'white',\n      placeholder: {\n        fontSize: 50\n      }\n    },\n    error: {\n      fontSize: 16,\n      color: 'red'\n    },\n    button: {\n      backgroundColor: 'white',\n      paddingVertical: 10,\n      paddingHorizontal: 20,\n      borderRadius: 5,\n      marginTop: 20,\n      color: 'green'\n    },\n    buttonText: {\n      color: 'black',\n      fontSize: 16,\n      fontWeight: 'bold'\n    }\n  });\n}\nexport default Singlechat;","map":{"version":3,"names":["React","useState","useEffect","TextInput","AsyncStorage","useNavigation","Singlechat","chat_id","setChatId","ChatDetail","chat","name","creator","members","messages","navigation","fsinglechat","token","getItem","fetch","method","headers","then","response","json","data","setChat","console","log","catch","error","styles","container","title","input","text","button","buttonText","fontSize","fontWeight","first_name","last_name","length","map","message","marginVertical","author","message_id","goBack","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","label","marginTop","alignSelf","marginLeft","borderWidth","borderColor","borderRadius","padding","margin","width","color","placeholder","paddingVertical","paddingHorizontal"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Singlechat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { useNavigation } from '@react-navigation/native'\n\nfunction Singlechat() {\n  const [chat_id, setChatId] = useState('')\n  //   const [chat, setChat] = useState({\n  //     name: '',\n  //     creator: { user_id: '', first_name: '', last_name: '' },\n  //     members: { user_id: '', first_name: '', last_name: '' },\n  //     messages: {},\n  //   })\n  const ChatDetail = ({ chat }) => {\n    const { name, creator, members, messages } = chat\n\n    const navigation = useNavigation()\n\n    const fsinglechat = async () => {\n      const token = await AsyncStorage.getItem('@token')\n\n      fetch('http://localhost:3333/api/1.0.0/chat/' + chat_id, {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setChat(data)\n          console.log(data.creator, 'data creator')\n          // console.log(data, 'this is data')\n\n          // console.log(typeof data)\n          // console.log(data[creator], 'hello sherry')\n          // console.log(Object.keys(data))\n          // console.log(data.creator, ' data creator')\n          // console.log(chat.creator, 'chat creator')\n        })\n        .catch((error) => console.log(error))\n    }\n\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Single Chat Details</Text>\n        <TextInput\n          style={styles.input}\n          defaultValue={chat_id}\n          placeholder=\"Enter ID Number\"\n          value={chat_id}\n          onChangeText={(text) => setChatId(text)}\n        />\n        <TouchableOpacity style={styles.button} onPress={fsinglechat}>\n          <Text style={styles.buttonText}>Get chat</Text>\n        </TouchableOpacity>\n        <View>\n          <Text style={{ fontSize: 24, fontWeight: 'bold' }}>{name}</Text>\n          <Text>\n            Creator: {creator.first_name} {creator.last_name}\n          </Text>\n          <Text>Members: {members.length}</Text>\n\n          {messages.map((message) => (\n            <View key={message.message_id} style={{ marginVertical: 10 }}>\n              <Text style={{ fontWeight: 'bold' }}>\n                {message.author.first_name}:\n              </Text>\n              <Text>{message.message}</Text>\n            </View>\n          ))}\n        </View>\n        {'}'};\n        {/* {chat && (\n        // render the chat details once chat state is not null\n        <View>\n          <Text style={styles.label}>Chat Name:</Text>\n          <TextInput style={styles.input} value={chat.name} editable={false} />\n\n          <Text style={styles.label}> Creator</Text>\n          <TextInput\n            style={styles.input}\n            value={chat.creator.user_id}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={`${chat.creator.first_name}\\n${chat.creator.last_name}`}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={chat.creator.email}\n            editable={false}\n          />\n          <Text style={styles.label}> Members</Text>\n          <TextInput\n            style={styles.input}\n            value={chat.members.user_id}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={`${chat.members.first_name}\\n${chat.members.last_name}`}\n            editable={false}\n          />\n          <TextInput\n            style={styles.input}\n            value={chat.members.email}\n            editable={false}\n          />\n          <Text style={styles.label}> Last Message</Text>\n          <TextInput\n            style={styles.input}\n            value={chat.messages}\n            editable={false}\n          />\n        </View>\n      )} */}\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.goBack()}\n        >\n          <Text style={styles.buttonText}>Back</Text>\n        </TouchableOpacity>\n      </View>\n    )\n  }\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#808000',\n    },\n    title: {\n      fontSize: 24,\n      fontWeight: 'bold',\n      marginBottom: 20,\n    },\n    label: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      marginTop: 10,\n      alignSelf: 'flex-start',\n      marginLeft: 20,\n    },\n    input: {\n      borderWidth: 1,\n      borderColor: '#ccc',\n      borderRadius: 5,\n      padding: 10,\n      margin: 10,\n      width: 250,\n      fontSize: 16,\n      color: 'white',\n      placeholder: {\n        fontSize: 50,\n      },\n    },\n    error: {\n      fontSize: 16,\n      color: 'red',\n    },\n    button: {\n      backgroundColor: 'white',\n      paddingVertical: 10,\n      paddingHorizontal: 20,\n      borderRadius: 5,\n      marginTop: 20,\n      color: 'green',\n    },\n    buttonText: {\n      color: 'black',\n      fontSize: 16,\n      fontWeight: 'bold',\n    },\n  })\n}\nexport default Singlechat\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}