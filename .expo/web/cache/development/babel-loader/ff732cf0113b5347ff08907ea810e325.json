{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ViewContact() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    user_id = _useState2[0],\n    setUserId = _useState2[1];\n  var fetchUser = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var id = yield AsyncStorage.getItem('@id');\n        var response = yield fetch(\"  'http://localhost:3333/api/1.0.0/contacts'\", {\n          method: 'GET',\n          headers: {\n            'X-Authorization': token,\n            'Content-Type': 'application/json'\n          }\n        });\n        var data = yield response.json();\n        console.log(data, ' this is data');\n        setUser(data);\n        yield AsyncStorage.setItem('user', data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function fetchUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  fetchUser();\n  if (!user) {\n    return _jsx(Text, {\n      style: styles.error,\n      children: \"401 Unauthorised...\"\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputView,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Enter ID \"\n      }), _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Enter ID\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(user_id) {\n          return setUserId(user_id);\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: Addto,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ViewContact;","map":{"version":3,"names":["React","useState","TouchableOpacity","AsyncStorage","ViewContact","user_id","setUserId","fetchUser","token","getItem","id","response","fetch","method","headers","data","json","console","log","setUser","setItem","error","user","styles","container","inputView","title","TextInput","button","Addto","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderRadius","marginTop","color"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/ViewContact.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, TextInput, Alert } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction ViewContact() {\n  const [user_id, setUserId] = useState('')\n\n  const fetchUser = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const id = await AsyncStorage.getItem('@id')\n\n      const response = await fetch(\n        `  'http://localhost:3333/api/1.0.0/contacts'`,\n        {\n          method: 'GET',\n          headers: {\n            'X-Authorization': token,\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n      const data = await response.json()\n      console.log(data, ' this is data')\n      setUser(data)\n      await AsyncStorage.setItem('user', data)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  fetchUser()\n\n  if (!user) {\n    return <Text style={styles.error}>401 Unauthorised...</Text>\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputView}>\n        <Text style={styles.title}>Enter ID </Text>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Enter ID\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(user_id) => setUserId(user_id)}\n        />\n      </View>\n      <TouchableOpacity style={styles.button} onPress={Addto}>\n        <Text style={styles.buttonText}>Add</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default ViewContact\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvC,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,YAAY,MAAM,2CAA2C;AAAA;AAAA;AAEpE,SAASC,WAAW,GAAG;EACrB,gBAA6BH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAlCI,OAAO;IAAEC,SAAS;EAEzB,IAAMC,SAAS;IAAA,6BAAG,aAAY;MAC5B,IAAI;QACF,IAAMC,KAAK,SAASL,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAC;QAClD,IAAMC,EAAE,SAASP,YAAY,CAACM,OAAO,CAAC,KAAK,CAAC;QAE5C,IAAME,QAAQ,SAASC,KAAK,iDAE1B;UACEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,iBAAiB,EAAEN,KAAK;YACxB,cAAc,EAAE;UAClB;QACF,CAAC,CACF;QACD,IAAMO,IAAI,SAASJ,QAAQ,CAACK,IAAI,EAAE;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,EAAE,eAAe,CAAC;QAClCI,OAAO,CAACJ,IAAI,CAAC;QACb,MAAMZ,YAAY,CAACiB,OAAO,CAAC,MAAM,EAAEL,IAAI,CAAC;MAC1C,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAAA,gBAtBKd,SAAS;MAAA;IAAA;EAAA,GAsBd;EACDA,SAAS,EAAE;EAEX,IAAI,CAACe,IAAI,EAAE;IACT,OAAO,KAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACF,KAAM;MAAA,UAAC;IAAmB,EAAO;EAC9D;EAEA,OACE,MAAC,IAAI;IAAC,KAAK,EAAEE,MAAM,CAACC,SAAU;IAAA,WAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,SAAU;MAAA,WAC5B,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,KAAM;QAAA,UAAC;MAAS,EAAO,EAC3C,KAAC,SAAS;QACR,KAAK,EAAEH,MAAM,CAACI,SAAU;QACxB,WAAW,EAAC,UAAU;QACtB,oBAAoB,EAAC,SAAS;QAC9B,YAAY,EAAE,sBAACtB,OAAO;UAAA,OAAKC,SAAS,CAACD,OAAO,CAAC;QAAA;MAAC,EAC9C;IAAA,EACG,EACP,KAAC,gBAAgB;MAAC,KAAK,EAAEkB,MAAM,CAACK,MAAO;MAAC,OAAO,EAAEC,KAAM;MAAA,UACrD,KAAC,IAAI;QAAC,KAAK,EAAEN,MAAM,CAACO,UAAW;QAAA,UAAC;MAAG;IAAO,EACzB;EAAA,EACd;AAEX;AAEA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDV,KAAK,EAAE;IACLW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDX,MAAM,EAAE;IACNQ,eAAe,EAAE,OAAO;IACxBI,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,GAAG;IACjBC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACT,CAAC;EACDd,UAAU,EAAE;IACVc,KAAK,EAAE,OAAO;IACdP,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAelC,WAAW"},"metadata":{},"sourceType":"module"}