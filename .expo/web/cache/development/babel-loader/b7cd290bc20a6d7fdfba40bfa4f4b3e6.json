{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { HeaderTitle } from '@react-navigation/elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Chats() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatMessages = _useState4[0],\n    setChatMessages = _useState4[1];\n  var chat_id = route.params.chat_id;\n  function fetchChatMessages() {\n    return _fetchChatMessages.apply(this, arguments);\n  }\n  function _fetchChatMessages() {\n    _fetchChatMessages = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('token');\n        var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/message\", {\n          headers: {\n            Authorization: token\n          }\n        });\n        var data = yield response.json();\n        setChatMessages(data);\n        console.log(data, 'This is chat message');\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return _fetchChatMessages.apply(this, arguments);\n  }\n  function sendMessage() {\n    return _sendMessage.apply(this, arguments);\n  }\n  function _sendMessage() {\n    _sendMessage = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('token');\n        var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/message\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: token\n          },\n          body: JSON.stringify({\n            message: message\n          })\n        });\n        if (response.ok) {\n          setMessage('');\n          fetchChatMessages();\n        } else {\n          throw new Error('Failed to send message');\n        }\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return _sendMessage.apply(this, arguments);\n  }\n  useEffect(function () {\n    fetchChatMessages();\n  }, []);\n  navigation.setOptions({\n    headerLeft: function headerLeft(props) {\n      return _jsx(HeaderBackButton, _objectSpread(_objectSpread({}, props), {}, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        }\n      }));\n    },\n    headerTitle: function headerTitle(props) {\n      return _jsx(HeaderTitle, _objectSpread(_objectSpread({}, props), {}, {\n        style: styles.headerTitle,\n        children: \"Chats\"\n      }));\n    }\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [chatMessages.map(function (chatMessage) {\n      return _jsx(Text, {\n        style: styles.message,\n        children: chatMessage.message\n      }, chatMessage.id);\n    }), _jsx(TextInput, {\n      value: message,\n      onChangeText: setMessage,\n      placeholder: \"Type your message\",\n      style: styles.input\n    }), _jsx(TouchableOpacity, {\n      onPress: sendMessage,\n      children: _jsx(Ionicons, {\n        name: \"send\",\n        size: 24,\n        color: \"white\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    alignItems: 'center'\n  },\n  input: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 20\n  },\n  headerTitle: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  message: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 10\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useEffect","useNavigation","HeaderBackButton","Ionicons","AsyncStorage","HeaderTitle","Chats","navigation","message","setMessage","chatMessages","setChatMessages","chat_id","route","params","fetchChatMessages","token","getItem","response","fetch","headers","Authorization","data","json","console","log","error","Alert","alert","sendMessage","method","body","JSON","stringify","ok","Error","setOptions","headerLeft","props","goBack","headerTitle","styles","container","map","chatMessage","id","input","StyleSheet","create","flex","backgroundColor","padding","alignItems","borderRadius","width","marginBottom","fontSize","color"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Alert,\n  TouchableOpacity,\n} from 'react-native'\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { HeaderTitle } from '@react-navigation/elements'\n\nfunction Chats() {\n  const navigation = useNavigation()\n  const [message, setMessage] = useState('')\n  const [chatMessages, setChatMessages] = useState([])\n  const { chat_id } = route.params\n\n  async function fetchChatMessages() {\n    try {\n      const token = await AsyncStorage.getItem('token')\n      const response = await fetch(\n        `http://localhost:3333/api/1.0.0/chat/${chat_id}/message`,\n        {\n          headers: {\n            Authorization: token,\n          },\n        }\n      )\n      const data = await response.json()\n      setChatMessages(data)\n      console.log(data, 'This is chat message')\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  async function sendMessage() {\n    try {\n      const token = await AsyncStorage.getItem('token')\n      const response = await fetch(\n        `http://localhost:3333/api/1.0.0/chat/${chat_id}/message`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: token,\n          },\n          body: JSON.stringify({ message }),\n        }\n      )\n      if (response.ok) {\n        // handle success\n        setMessage('')\n        fetchChatMessages()\n      } else {\n        throw new Error('Failed to send message')\n      }\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  useEffect(() => {\n    fetchChatMessages()\n  }, [])\n\n  navigation.setOptions({\n    headerLeft: (props) => (\n      <HeaderBackButton {...props} onPress={() => navigation.goBack()} />\n    ),\n    headerTitle: (props) => (\n      <HeaderTitle {...props} style={styles.headerTitle}>\n        Chats\n      </HeaderTitle>\n    ),\n  })\n\n  return (\n    <View style={styles.container}>\n      {chatMessages.map((chatMessage) => (\n        <Text key={chatMessage.id} style={styles.message}>\n          {chatMessage.message}\n        </Text>\n      ))}\n      <TextInput\n        value={message}\n        onChangeText={setMessage}\n        placeholder=\"Type your message\"\n        style={styles.input}\n      />\n      <TouchableOpacity onPress={sendMessage}>\n        <Ionicons name=\"send\" size={24} color=\"white\" />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    alignItems: 'center',\n  },\n  input: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 20,\n  },\n  headerTitle: {\n    fontSize: 20,\n    color: '#fff',\n  },\n  message: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 10,\n  },\n})\n\nexport default Chats\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}