{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChatsScreen(props) {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chatList = _useState2[0],\n    setChatList = _useState2[1];\n  var viewchat = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('@token');\n      fetch('http://localhost:3333/api/1.0.0/chat', {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data, 'data');\n        setChatList(function (oldArray) {\n          return [].concat(_toConsumableArray(oldArray), _toConsumableArray(data));\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    });\n    return function viewchat() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    viewchat();\n  }, []);\n  var Addchat = function Addchat() {\n    navigation.navigate('Addchat');\n  };\n  var Singlechat = function Singlechat() {\n    navigation.navigate('Singlechat');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: Addchat,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Create Chat\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: Singlechat,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Single Chat\"\n        })\n      }), _jsxs(View, {\n        style: styles.field,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"List of Chats\"\n        }), chatList.map(function (chat) {\n          return _jsxs(View, {\n            children: [_jsxs(Text, {\n              style: styles.contact,\n              children: [chat.id, \" \", chat.name]\n            }), _jsxs(Text, {\n              children: [\"User ID: \", chat.creator.user_id, '\\n', \"Name: \", chat.creator.first_name, \" \", chat.creator.last_name, '\\n', \"E-mail: \", chat.creator.email]\n            }), \")\", '}', _jsx(Text, {\n              children: chat.messages\n            })]\n          }, chat.id);\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    marginTop: 50\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green',\n    marginBottom: 50\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  field: {\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 5,\n    padding: 30,\n    marginTop: 40,\n    width: '90%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white'\n  },\n  contact: {\n    backgroundColor: 'white',\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 5,\n    width: '100%'\n  },\n  contactName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  contactInfo: {\n    fontSize: 14\n  }\n});\nexport default ChatsScreen;","map":{"version":3,"names":["React","useState","useEffect","TouchableOpacity","useNavigation","AsyncStorage","ChatsScreen","props","navigation","chatList","setChatList","viewchat","token","getItem","fetch","method","headers","then","response","json","data","console","log","oldArray","catch","error","Addchat","navigate","Singlechat","styles","container","scrollContainer","button","buttonText","field","title","map","chat","contact","id","name","creator","user_id","first_name","last_name","email","messages","StyleSheet","create","flexGrow","justifyContent","alignItems","backgroundColor","flex","fontSize","fontWeight","marginBottom","marginTop","paddingVertical","paddingHorizontal","borderRadius","color","borderWidth","borderColor","padding","width","contactName","contactInfo"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/chatsscreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, ScrollView } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { useNavigation } from '@react-navigation/native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction ChatsScreen(props) {\n  const navigation = useNavigation()\n\n  const [chatList, setChatList] = useState([])\n\n  const viewchat = async () => {\n    const token = await AsyncStorage.getItem('@token')\n\n    fetch('http://localhost:3333/api/1.0.0/chat', {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, 'data')\n        setChatList((oldArray) => [...oldArray, ...data])\n      })\n      .catch((error) => console.log(error))\n  }\n  useEffect(() => {\n    viewchat()\n  }, [])\n\n  const Addchat = () => {\n    navigation.navigate('Addchat')\n  }\n  const Singlechat = () => {\n    navigation.navigate('Singlechat')\n  }\n  return (\n    <View style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <TouchableOpacity style={styles.button} onPress={Addchat}>\n          <Text style={styles.buttonText}>Create Chat</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={Singlechat}>\n          <Text style={styles.buttonText}>Single Chat</Text>\n        </TouchableOpacity>\n\n        <View style={styles.field}>\n          <Text style={styles.title}>List of Chats</Text>\n          {chatList.map((chat) => (\n            <View key={chat.id}>\n              <Text style={styles.contact}>\n                {chat.id} {chat.name}\n              </Text>\n              <Text>\n                User ID: {chat.creator.user_id}\n                {'\\n'}\n                Name: {chat.creator.first_name} {chat.creator.last_name}\n                {'\\n'}\n                E-mail: {chat.creator.email}\n              </Text>\n              ){'}'}\n              <Text>{chat.messages}</Text>\n            </View>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    marginTop: 50,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green',\n    marginBottom: 50,\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  field: {\n    borderWidth: 1,\n    borderColor: 'white',\n    borderRadius: 5,\n    padding: 30,\n    marginTop: 40,\n    width: '90%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n  },\n  contact: {\n    backgroundColor: 'white',\n    padding: 10,\n    marginBottom: 10,\n    borderRadius: 5,\n    width: '100%',\n  },\n  contactName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  contactInfo: {\n    fontSize: 14,\n  },\n})\n\nexport default ChatsScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}