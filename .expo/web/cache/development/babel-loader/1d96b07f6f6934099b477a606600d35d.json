{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction Chats(props) {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatMessages = _useState4[0],\n    setChatMessages = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    messageId = _useState6[0],\n    setMessageId = _useState6[1];\n  var _useState7 = useState(props.route.params.chat_id),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatId = _useState8[0],\n    setChatId = _useState8[1];\n  var _useState9 = useState({\n      messages: [{}]\n    }),\n    _useState10 = _slicedToArray(_useState9, 2),\n    chat = _useState10[0],\n    setChat = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    editFormVisible = _useState12[0],\n    setEditFormVisible = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    modalVisible = _useState14[0],\n    setModalVisible = _useState14[1];\n  useEffect(function () {\n    fetchMessages();\n  }, []);\n  var fetchMessages = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('@token');\n      console.log(chatId, 'chatid');\n      fetch('http://localhost:3333/api/1.0.0/chat/' + chatId, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Authorization': token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data, 'data');\n        setChat(data);\n        setChatMessages(data.messages);\n        console.log(data.messages, 'data messages');\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    });\n    return function fetchMessages() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var sendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.log(message, 'this is message');\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/chat/' + chatId + '/message', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          },\n          body: JSON.stringify({\n            message: message\n          })\n        });\n        var data = response.status;\n        console.log(data, 'this is data');\n        console.log(message, 'this is messages');\n        if (response.ok) {\n          setChatMessages([].concat(_toConsumableArray(chatMessages), [{\n            message: message\n          }]));\n          console.log(chatMessages, 'message');\n          setMessage('');\n        } else {\n          throw new Error('Failed to send message');\n        }\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return function sendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleLongPress = function handleLongPress(item, token) {\n    console.log('Item long pressed:', item, token);\n    setModalVisible(true);\n    setMessageId(item.message_id);\n    setMessage(item.message);\n  };\n  var Deletemessage = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/chat/' + chatId + '/message/' + messageId, {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          }\n        });\n        var data = response.status;\n        console.log(data, 'this is data');\n        if (response.ok) {\n          setChatMessages(chatMessages.filter(function (msg) {\n            return msg.message_id !== messageId;\n          }));\n        } else {\n          throw new Error('Failed to delete message');\n        }\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return function Deletemessage() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  function editChatMessage() {\n    return _editChatMessage.apply(this, arguments);\n  }\n  function _editChatMessage() {\n    _editChatMessage = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chatId + \"/message/\" + messageId, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          },\n          body: JSON.stringify({\n            message: message\n          })\n        });\n        console.log(messageId, token);\n        var result = yield response.json();\n        if (result.success) {\n          console.log('Chat message updated successfully!');\n        } else {\n          console.error(result.message);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return _editChatMessage.apply(this, arguments);\n  }\n  var renderChatMessage = function renderChatMessage(_ref4) {\n    var item = _ref4.item;\n    return _jsx(TouchableOpacity, {\n      onLongPress: function onLongPress() {\n        return handleLongPress(item);\n      },\n      style: styles.message,\n      children: _jsx(Text, {\n        children: item.message\n      })\n    });\n  };\n  var AddMember = function AddMember(chat_id) {\n    console.log(chat_id, 'chat_id');\n    navigation.navigate('AddMember', {\n      chat_id: chat_id\n    });\n  };\n  var DeleteUser = function DeleteUser(chat_id) {\n    navigation.navigate('DeleteUser', {\n      chat_id: chat_id\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: chatMessages,\n      renderItem: renderChatMessage,\n      keyExtractor: function keyExtractor(data, index) {\n        return index;\n      },\n      style: styles.messagesList\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setModalVisible(false);\n          },\n          children: _jsx(Ionicons, {\n            name: \"close-circle-outline\",\n            size: 24,\n            color: \"#000000\"\n          })\n        }), _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.modalButton,\n            onPress: Deletemessage,\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Delete Message\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.modalButton,\n            onPress: function onPress() {\n              return setEditFormVisible(true);\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Edit Message\"\n            })\n          })]\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: editFormVisible,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setEditFormVisible(false);\n          },\n          children: _jsx(Ionicons, {\n            name: \"close-circle-outline\",\n            size: 24,\n            color: \"#000000\"\n          })\n        }), _jsx(View, {\n          style: styles.modalContent,\n          children: _jsxs(_Fragment, {\n            children: [_jsx(TextInput, {\n              style: styles.Edit,\n              value: message,\n              onChangeText: function onChangeText(text) {\n                setMessage(text);\n                console.log(text);\n              }\n            }), _jsx(TouchableOpacity, {\n              style: styles.button,\n              onPress: editChatMessage,\n              children: _jsx(Ionicons, {\n                name: \"save\",\n                size: 30,\n                color: \"black\"\n              })\n            })]\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        value: message,\n        onChangeText: setMessage,\n        placeholder: \"Type your message\",\n        style: styles.input\n      }), _jsx(TouchableOpacity, {\n        onPress: sendMessage,\n        style: styles.send,\n        children: _jsx(Ionicons, {\n          name: \"send\",\n          size: 24,\n          color: \"yellow\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonA,\n        onPress: function onPress() {\n          return AddMember(chatId);\n        },\n        children: _jsx(Text, {\n          children: \"Add User\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.buttonB,\n        onPress: function onPress() {\n          return DeleteUser(chatId);\n        },\n        children: _jsx(Text, {\n          children: \"Delete a User\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.backButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Ionicons, {\n        name: \"ios-arrow-back\",\n        size: 24,\n        color: \"#000000\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    justifyContent: 'flex-end'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    flex: 1,\n    marginRight: 10,\n    marginBottom: 30\n  },\n  button: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5\n  },\n  buttonText: {\n    color: '#808000',\n    fontWeight: 'bold'\n  },\n  buttonA: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    marginTop: 80,\n    marginBottom: 20,\n    position: 'absolute'\n  },\n  buttonB: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    marginTop: 80,\n    marginBottom: 20,\n    position: 'absolute',\n    marginLeft: 110\n  },\n  messagesList: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 20,\n    marginTop: 80\n  },\n  message: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  backButton: {\n    position: 'absolute',\n    top: 40,\n    left: 20,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 50,\n    width: 40,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  send: {\n    marginBottom: 29\n  },\n  backButtonText: {\n    fontSize: 20,\n    color: '#000000',\n    fontWeight: 'bold'\n  },\n  modalContainer: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '80%',\n    height: '25%',\n    marginTop: '70%'\n  },\n  modalContent: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  modalButton: {\n    backgroundColor: '#808000',\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useEffect","useNavigation","Ionicons","AsyncStorage","Chats","props","navigation","message","setMessage","chatMessages","setChatMessages","messageId","setMessageId","route","params","chat_id","chatId","setChatId","messages","chat","setChat","editFormVisible","setEditFormVisible","modalVisible","setModalVisible","fetchMessages","token","getItem","console","log","fetch","method","headers","then","response","json","data","catch","error","sendMessage","body","JSON","stringify","status","ok","Error","Alert","alert","handleLongPress","item","message_id","Deletemessage","filter","msg","editChatMessage","result","success","renderChatMessage","styles","AddMember","navigate","DeleteUser","container","index","messagesList","modalContainer","modalContent","modalButton","buttonText","Edit","text","button","inputContainer","input","send","buttonA","buttonB","backButton","goBack","StyleSheet","create","flex","backgroundColor","padding","justifyContent","flexDirection","alignItems","marginBottom","borderRadius","marginRight","paddingVertical","paddingHorizontal","marginHorizontal","color","fontWeight","marginTop","position","marginLeft","width","top","left","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","backButtonText","fontSize","alignSelf"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Alert,\n  TouchableOpacity,\n  FlatList,\n  Modal,\n} from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction Chats(props) {\n  const navigation = useNavigation()\n  const [message, setMessage] = useState('')\n  const [chatMessages, setChatMessages] = useState([])\n  const [messageId, setMessageId] = useState([])\n\n  const [chatId, setChatId] = useState(props.route.params.chat_id)\n  const [chat, setChat] = useState({ messages: [{}] })\n  const [editFormVisible, setEditFormVisible] = useState(false)\n\n  const [modalVisible, setModalVisible] = useState(false)\n\n  useEffect(() => {\n    fetchMessages()\n  }, [])\n\n  const fetchMessages = async () => {\n    const token = await AsyncStorage.getItem('@token')\n    console.log(chatId, 'chatid')\n    fetch('http://localhost:3333/api/1.0.0/chat/' + chatId, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Authorization': token,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, 'data')\n        setChat(data)\n        setChatMessages(data.messages)\n\n        console.log(data.messages, 'data messages')\n      })\n\n      .catch((error) => console.log(error))\n  }\n\n  const sendMessage = async () => {\n    console.log(message, 'this is message')\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const response = await fetch(\n        'http://localhost:3333/api/1.0.0/chat/' + chatId + '/message',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n          body: JSON.stringify({ message: message }),\n        }\n      )\n      const data = response.status\n\n      console.log(data, 'this is data')\n      console.log(message, 'this is messages')\n\n      if (response.ok) {\n        setChatMessages([...chatMessages, { message: message }])\n\n        console.log(chatMessages, 'message')\n        // reset message input field\n        setMessage('')\n      } else {\n        throw new Error('Failed to send message')\n      }\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  const handleLongPress = (item, token) => {\n    console.log('Item long pressed:', item, token)\n    setModalVisible(true)\n    setMessageId(item.message_id) // set the message_id in state\n    setMessage(item.message)\n  }\n\n  const Deletemessage = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const response = await fetch(\n        'http://localhost:3333/api/1.0.0/chat/' +\n          chatId +\n          '/message/' +\n          messageId,\n        {\n          method: 'DELETE',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n        }\n      )\n      const data = response.status\n\n      console.log(data, 'this is data')\n\n      if (response.ok) {\n        // remove the deleted message from the state\n        setChatMessages(\n          chatMessages.filter((msg) => msg.message_id !== messageId)\n        )\n      } else {\n        throw new Error('Failed to delete message')\n      }\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n  async function editChatMessage() {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n\n      const response = await fetch(\n        `http://localhost:3333/api/1.0.0/chat/${chatId}/message/${messageId}`,\n        {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n          body: JSON.stringify({\n            message: message,\n          }),\n        }\n      )\n      console.log(messageId, token)\n\n      const result = await response.json()\n\n      if (result.success) {\n        console.log('Chat message updated successfully!')\n      } else {\n        console.error(result.message)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const renderChatMessage = ({ item }) => (\n    <TouchableOpacity\n      onLongPress={() => handleLongPress(item)}\n      style={styles.message}\n    >\n      <Text>{item.message}</Text>\n    </TouchableOpacity>\n  )\n\n  const AddMember = (chat_id) => {\n    console.log(chat_id, 'chat_id')\n    navigation.navigate('AddMember', { chat_id: chat_id })\n  }\n\n  const DeleteUser = (chat_id) => {\n    navigation.navigate('DeleteUser', { chat_id: chat_id })\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={chatMessages}\n        renderItem={renderChatMessage}\n        keyExtractor={(data, index) => index}\n        style={styles.messagesList}\n      />\n      <Modal visible={modalVisible}>\n        <View style={styles.modalContainer}>\n          <TouchableOpacity onPress={() => setModalVisible(false)}>\n            <Ionicons name=\"close-circle-outline\" size={24} color=\"#000000\" />\n          </TouchableOpacity>\n          <View style={styles.modalContent}>\n            <TouchableOpacity\n              style={styles.modalButton}\n              onPress={Deletemessage}\n            >\n              <Text style={styles.buttonText}>Delete Message</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.modalButton}\n              onPress={() => setEditFormVisible(true)}\n            >\n              <Text style={styles.buttonText}>Edit Message</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n      <Modal visible={editFormVisible}>\n        <View style={styles.modalContainer}>\n          <TouchableOpacity onPress={() => setEditFormVisible(false)}>\n            <Ionicons name=\"close-circle-outline\" size={24} color=\"#000000\" />\n          </TouchableOpacity>\n          <View style={styles.modalContent}>\n            {\n              <>\n                <TextInput\n                  style={styles.Edit}\n                  value={message}\n                  onChangeText={(text) => {\n                    setMessage(text)\n                    console.log(text) // add this line\n                  }}\n                />\n                <TouchableOpacity\n                  style={styles.button}\n                  onPress={editChatMessage}\n                >\n                  <Ionicons name=\"save\" size={30} color=\"black\" />\n                </TouchableOpacity>\n              </>\n            }\n          </View>\n        </View>\n      </Modal>\n\n      <View style={styles.inputContainer}>\n        <TextInput\n          value={message}\n          onChangeText={setMessage}\n          placeholder=\"Type your message\"\n          style={styles.input}\n        />\n        <TouchableOpacity onPress={sendMessage} style={styles.send}>\n          <Ionicons name=\"send\" size={24} color=\"yellow\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.buttonA}\n          onPress={() => AddMember(chatId)}\n        >\n          <Text>Add User</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.buttonB}\n          onPress={() => DeleteUser(chatId)}\n        >\n          <Text>Delete a User</Text>\n        </TouchableOpacity>\n      </View>\n      <TouchableOpacity\n        style={styles.backButton}\n        onPress={() => navigation.goBack()}\n      >\n        <Ionicons name=\"ios-arrow-back\" size={24} color=\"#000000\" />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    justifyContent: 'flex-end',\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    flex: 1,\n    marginRight: 10,\n    marginBottom: 30,\n  },\n  button: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n  },\n  buttonText: {\n    color: '#808000',\n    fontWeight: 'bold',\n  },\n  buttonA: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    marginTop: 80,\n    marginBottom: 20,\n    position: 'absolute',\n  },\n  buttonB: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginHorizontal: 5,\n    marginTop: 80,\n    marginBottom: 20,\n\n    position: 'absolute',\n    marginLeft: 110,\n  },\n  messagesList: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 20,\n    marginTop: 80,\n  },\n  message: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  },\n  backButton: {\n    position: 'absolute',\n    top: 40, // Change top value\n    left: 20,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 50,\n    width: 40,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  send: {\n    marginBottom: 29,\n  },\n  backButtonText: {\n    fontSize: 20,\n    color: '#000000',\n    fontWeight: 'bold',\n  },\n  modalContainer: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 10,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '80%',\n    height: '25%',\n    marginTop: '70%',\n  },\n  modalContent: {\n    alignSelf: 'stretch',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  modalButton: {\n    backgroundColor: '#808000',\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginTop: 10,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n})\n\nexport default Chats\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}