{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport { makeRemote, makeShareable, isConfigured } from \"./core\";\nvar NUMBER = '[-+]?(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)';\nvar PERCENTAGE = NUMBER + '%';\nfunction call() {\n  'worklet';\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\nvar jsCachedMatchers = {};\nvar uiCachedMatchers = !isConfigured() ? {} : makeRemote({});\nfunction getMatchers() {\n  'worklet';\n\n  var cachedMatchers = _WORKLET ? uiCachedMatchers : jsCachedMatchers;\n  if (cachedMatchers.rgb === undefined) {\n    cachedMatchers.rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\n    cachedMatchers.rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));\n    cachedMatchers.hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));\n    cachedMatchers.hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\n    cachedMatchers.hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex6 = /^#([0-9a-fA-F]{6})$/;\n    cachedMatchers.hex8 = /^#([0-9a-fA-F]{8})$/;\n  }\n  return cachedMatchers;\n}\ngetMatchers();\nfunction hue2rgb(p, q, t) {\n  'worklet';\n\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\nfunction hslToRgb(h, s, l) {\n  'worklet';\n\n  var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  var p = 2 * l - q;\n  var r = hue2rgb(p, q, h + 1 / 3);\n  var g = hue2rgb(p, q, h);\n  var b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n}\nfunction parse255(str) {\n  'worklet';\n\n  var int = Number.parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\nfunction parse360(str) {\n  'worklet';\n\n  var int = Number.parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\nfunction parse1(str) {\n  'worklet';\n\n  var num = Number.parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\nfunction parsePercentage(str) {\n  'worklet';\n  var int = Number.parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\nvar names = !isConfigured() ? null : makeShareable({\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff\n});\nfunction normalizeColor(color) {\n  'worklet';\n\n  var _matchers$hex, _matchers$rgb, _matchers$rgba, _matchers$hex2, _matchers$hex3, _matchers$hex4, _matchers$hsl, _matchers$hsla;\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n  if (typeof color !== 'string') {\n    return null;\n  }\n  var matchers = getMatchers();\n  var match;\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$hex = matchers.hex6) === null || _matchers$hex === void 0 ? void 0 : _matchers$hex.exec(color)) {\n    return Number.parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n  if (names[color] !== undefined) {\n    return names[color];\n  }\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$rgb = matchers.rgb) === null || _matchers$rgb === void 0 ? void 0 : _matchers$rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | 0x000000ff) >>> 0;\n  }\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$rgba = matchers.rgba) === null || _matchers$rgba === void 0 ? void 0 : _matchers$rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | parse255(match[2]) << 16 | parse255(match[3]) << 8 | parse1(match[4])) >>> 0;\n  }\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$hex2 = matchers.hex3) === null || _matchers$hex2 === void 0 ? void 0 : _matchers$hex2.exec(color)) {\n    return Number.parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + 'ff', 16) >>> 0;\n  }\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$hex3 = matchers.hex8) === null || _matchers$hex3 === void 0 ? void 0 : _matchers$hex3.exec(color)) {\n    return Number.parseInt(match[1], 16) >>> 0;\n  }\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$hex4 = matchers.hex4) === null || _matchers$hex4 === void 0 ? void 0 : _matchers$hex4.exec(color)) {\n    return Number.parseInt(match[1] + match[1] + match[2] + match[2] + match[3] + match[3] + match[4] + match[4], 16) >>> 0;\n  }\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$hsl = matchers.hsl) === null || _matchers$hsl === void 0 ? void 0 : _matchers$hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | 0x000000ff) >>> 0;\n  }\n  if (match = matchers === null || matchers === void 0 ? void 0 : (_matchers$hsla = matchers.hsla) === null || _matchers$hsla === void 0 ? void 0 : _matchers$hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), parsePercentage(match[2]), parsePercentage(match[3])) | parse1(match[4])) >>> 0;\n  }\n  return null;\n}\nexport var opacity = function opacity(c) {\n  'worklet';\n\n  return (c >> 24 & 255) / 255;\n};\nexport var red = function red(c) {\n  'worklet';\n\n  return c >> 16 & 255;\n};\nexport var green = function green(c) {\n  'worklet';\n\n  return c >> 8 & 255;\n};\nexport var blue = function blue(c) {\n  'worklet';\n\n  return c & 255;\n};\nexport var rgbaColor = function rgbaColor(r, g, b) {\n  'worklet';\n\n  var alpha = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  if (Platform.OS === 'web' || !_WORKLET) {\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n  }\n  var c = Math.round(alpha * 255) * (1 << 24) + Math.round(r) * (1 << 16) + Math.round(g) * (1 << 8) + Math.round(b);\n  if (Platform.OS === 'android') {\n    return c < 1 << 31 >>> 0 ? c : c - 4294967296;\n  }\n  return c;\n};\nexport function RGBtoHSV(r, g, b) {\n  'worklet';\n  if (arguments.length === 1) {\n    g = r.g;\n    b = r.b;\n    r = r.r;\n  }\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var d = max - min;\n  var s = max === 0 ? 0 : d / max;\n  var v = max / 255;\n  var h;\n  switch (max) {\n    default:\n    case min:\n      h = 0;\n      break;\n    case r:\n      h = g - b + d * (g < b ? 6 : 0);\n      h /= 6 * d;\n      break;\n    case g:\n      h = b - r + d * 2;\n      h /= 6 * d;\n      break;\n    case b:\n      h = r - g + d * 4;\n      h /= 6 * d;\n      break;\n  }\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n}\nfunction HSVtoRGB(h, s, v) {\n  'worklet';\n  var r, g, b, i, f, p, q, t;\n  if (arguments.length === 1) {\n    s = h.s;\n    v = h.v;\n    h = h.h;\n  }\n  i = Math.floor(h * 6);\n  f = h * 6 - i;\n  p = v * (1 - s);\n  q = v * (1 - f * s);\n  t = v * (1 - (1 - f) * s);\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255)\n  };\n}\nexport var hsvToColor = function hsvToColor(h, s, v, a) {\n  'worklet';\n\n  var _HSVtoRGB = HSVtoRGB(h, s, v),\n    r = _HSVtoRGB.r,\n    g = _HSVtoRGB.g,\n    b = _HSVtoRGB.b;\n  return rgbaColor(r, g, b, a);\n};\nexport function processColorInitially(color) {\n  'worklet';\n\n  if (color === null || color === undefined || typeof color === 'number') {\n    return color;\n  }\n  var normalizedColor = normalizeColor(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n  normalizedColor = (normalizedColor << 24 | normalizedColor >>> 8) >>> 0;\n  return normalizedColor;\n}\nexport function isColor(value) {\n  'worklet';\n\n  if (typeof value !== 'string') {\n    return false;\n  }\n  return processColorInitially(value) != null;\n}\nexport function processColor(color) {\n  'worklet';\n\n  var normalizedColor = processColorInitially(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n  if (Platform.OS === 'android') {\n    normalizedColor = normalizedColor | 0x0;\n  }\n  return normalizedColor;\n}\nexport function convertToRGBA(color) {\n  'worklet';\n\n  var processedColor = processColorInitially(color);\n  var a = (processedColor >>> 24) / 255;\n  var r = (processedColor << 8 >>> 24) / 255;\n  var g = (processedColor << 16 >>> 24) / 255;\n  var b = (processedColor << 24 >>> 24) / 255;\n  return [r, g, b, a];\n}\nexport function rgbaArrayToRGBAColor(RGBA) {\n  'worklet';\n\n  return \"rgba(\" + Math.round(RGBA[0] * 255) + \", \" + Math.round(RGBA[1] * 255) + \", \" + Math.round(RGBA[2] * 255) + \", \" + RGBA[3] + \")\";\n}\nexport function toLinearSpace(RGBA) {\n  'worklet';\n\n  var gamma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.2;\n  var res = [];\n  for (var i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], gamma));\n  }\n  res.push(RGBA[3]);\n  return res;\n}\nexport function toGammaSpace(RGBA) {\n  'worklet';\n\n  var gamma = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.2;\n  var res = [];\n  for (var i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], 1 / gamma));\n  }\n  res.push(RGBA[3]);\n  return res;\n}","map":{"version":3,"mappings":"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","names":["makeRemote","makeShareable","isConfigured","NUMBER","PERCENTAGE","call","args","join","jsCachedMatchers","uiCachedMatchers","getMatchers","cachedMatchers","_WORKLET","rgb","undefined","RegExp","rgba","hsl","hsla","hex3","hex4","hex6","hex8","hue2rgb","p","q","t","hslToRgb","h","s","l","r","g","b","Math","round","parse255","str","int","Number","parseInt","parse360","parseFloat","parse1","num","parsePercentage","names","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","normalizeColor","color","matchers","match","_matchers$hex","exec","_matchers$rgb","_matchers$rgba","_matchers$hex2","_matchers$hex3","_matchers$hex4","_matchers$hsl","_matchers$hsla","opacity","c","rgbaColor","alpha","Platform","OS","RGBtoHSV","arguments","length","max","min","d","v","HSVtoRGB","i","f","floor","hsvToColor","a","processColorInitially","normalizedColor","isColor","value","processColor","convertToRGBA","processedColor","rgbaArrayToRGBAColor","RGBA","toLinearSpace","gamma","res","push","pow","toGammaSpace"],"sources":["Colors.ts"],"sourcesContent":["/* global _WORKLET */\n/**\n * Copied from:\n * react-native/Libraries/StyleSheet/normalizeColor.js\n * react-native/Libraries/StyleSheet/processColor.js\n * https://github.com/wcandillon/react-native-redash/blob/master/src/Colors.ts\n */\n\n/* eslint no-bitwise: 0 */\nimport { Platform } from 'react-native';\nimport { makeRemote, makeShareable, isConfigured } from './core';\n\ninterface RGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface HSV {\n  h: number;\n  s: number;\n  v: number;\n}\n\n// var INTEGER = '[-+]?\\\\d+';\nconst NUMBER = '[-+]?(?:\\\\d+(?:\\\\.\\\\d*)?|\\\\.\\\\d+)';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...args: unknown[]): string {\n  'worklet';\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\n// matchers use RegExp objects which needs to be created separately on JS and on\n// the UI thread. We keep separate cache of Regexes for UI and JS using the below\n// objects, then pick the right cache in getMatchers() method.\nconst jsCachedMatchers: Matchers = {};\nconst uiCachedMatchers: Matchers = !isConfigured() ? {} : makeRemote({});\ntype Matchers = {\n  rgb?: RegExp;\n  rgba?: RegExp;\n  hsl?: RegExp;\n  hsla?: RegExp;\n  hex3?: RegExp;\n  hex4?: RegExp;\n  hex5?: RegExp;\n  hex6?: RegExp;\n  hex8?: RegExp;\n};\nfunction getMatchers(): Matchers {\n  'worklet';\n  const cachedMatchers: Matchers = _WORKLET\n    ? uiCachedMatchers\n    : jsCachedMatchers;\n  if (cachedMatchers.rgb === undefined) {\n    cachedMatchers.rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\n    cachedMatchers.rgba = new RegExp(\n      'rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)\n    );\n    cachedMatchers.hsl = new RegExp(\n      'hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)\n    );\n    cachedMatchers.hsla = new RegExp(\n      'hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)\n    );\n    cachedMatchers.hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex4 =\n      /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\n    cachedMatchers.hex6 = /^#([0-9a-fA-F]{6})$/;\n    cachedMatchers.hex8 = /^#([0-9a-fA-F]{8})$/;\n  }\n  return cachedMatchers;\n}\n// cachedMatchers is lazy loaded and it is frozen when worklet is being created,\n// it is possible to call getMatchers() when the object is frozen, then cachedMatchers\n// has no assigned regexes\ngetMatchers();\n\nfunction hue2rgb(p: number, q: number, t: number): number {\n  'worklet';\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h: number, s: number, l: number): number {\n  'worklet';\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  );\n}\n\nfunction parse255(str: string): number {\n  'worklet';\n  const int = Number.parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str: string): number {\n  'worklet';\n  const int = Number.parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str: string): number {\n  'worklet';\n  const num = Number.parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str: string): number {\n  'worklet';\n  // parseFloat conveniently ignores the final %\n  const int = Number.parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nconst names: any = !isConfigured()\n  ? null\n  : makeShareable({\n      transparent: 0x00000000,\n\n      // http://www.w3.org/TR/css3-color/#svg-color\n      aliceblue: 0xf0f8ffff,\n      antiquewhite: 0xfaebd7ff,\n      aqua: 0x00ffffff,\n      aquamarine: 0x7fffd4ff,\n      azure: 0xf0ffffff,\n      beige: 0xf5f5dcff,\n      bisque: 0xffe4c4ff,\n      black: 0x000000ff,\n      blanchedalmond: 0xffebcdff,\n      blue: 0x0000ffff,\n      blueviolet: 0x8a2be2ff,\n      brown: 0xa52a2aff,\n      burlywood: 0xdeb887ff,\n      burntsienna: 0xea7e5dff,\n      cadetblue: 0x5f9ea0ff,\n      chartreuse: 0x7fff00ff,\n      chocolate: 0xd2691eff,\n      coral: 0xff7f50ff,\n      cornflowerblue: 0x6495edff,\n      cornsilk: 0xfff8dcff,\n      crimson: 0xdc143cff,\n      cyan: 0x00ffffff,\n      darkblue: 0x00008bff,\n      darkcyan: 0x008b8bff,\n      darkgoldenrod: 0xb8860bff,\n      darkgray: 0xa9a9a9ff,\n      darkgreen: 0x006400ff,\n      darkgrey: 0xa9a9a9ff,\n      darkkhaki: 0xbdb76bff,\n      darkmagenta: 0x8b008bff,\n      darkolivegreen: 0x556b2fff,\n      darkorange: 0xff8c00ff,\n      darkorchid: 0x9932ccff,\n      darkred: 0x8b0000ff,\n      darksalmon: 0xe9967aff,\n      darkseagreen: 0x8fbc8fff,\n      darkslateblue: 0x483d8bff,\n      darkslategray: 0x2f4f4fff,\n      darkslategrey: 0x2f4f4fff,\n      darkturquoise: 0x00ced1ff,\n      darkviolet: 0x9400d3ff,\n      deeppink: 0xff1493ff,\n      deepskyblue: 0x00bfffff,\n      dimgray: 0x696969ff,\n      dimgrey: 0x696969ff,\n      dodgerblue: 0x1e90ffff,\n      firebrick: 0xb22222ff,\n      floralwhite: 0xfffaf0ff,\n      forestgreen: 0x228b22ff,\n      fuchsia: 0xff00ffff,\n      gainsboro: 0xdcdcdcff,\n      ghostwhite: 0xf8f8ffff,\n      gold: 0xffd700ff,\n      goldenrod: 0xdaa520ff,\n      gray: 0x808080ff,\n      green: 0x008000ff,\n      greenyellow: 0xadff2fff,\n      grey: 0x808080ff,\n      honeydew: 0xf0fff0ff,\n      hotpink: 0xff69b4ff,\n      indianred: 0xcd5c5cff,\n      indigo: 0x4b0082ff,\n      ivory: 0xfffff0ff,\n      khaki: 0xf0e68cff,\n      lavender: 0xe6e6faff,\n      lavenderblush: 0xfff0f5ff,\n      lawngreen: 0x7cfc00ff,\n      lemonchiffon: 0xfffacdff,\n      lightblue: 0xadd8e6ff,\n      lightcoral: 0xf08080ff,\n      lightcyan: 0xe0ffffff,\n      lightgoldenrodyellow: 0xfafad2ff,\n      lightgray: 0xd3d3d3ff,\n      lightgreen: 0x90ee90ff,\n      lightgrey: 0xd3d3d3ff,\n      lightpink: 0xffb6c1ff,\n      lightsalmon: 0xffa07aff,\n      lightseagreen: 0x20b2aaff,\n      lightskyblue: 0x87cefaff,\n      lightslategray: 0x778899ff,\n      lightslategrey: 0x778899ff,\n      lightsteelblue: 0xb0c4deff,\n      lightyellow: 0xffffe0ff,\n      lime: 0x00ff00ff,\n      limegreen: 0x32cd32ff,\n      linen: 0xfaf0e6ff,\n      magenta: 0xff00ffff,\n      maroon: 0x800000ff,\n      mediumaquamarine: 0x66cdaaff,\n      mediumblue: 0x0000cdff,\n      mediumorchid: 0xba55d3ff,\n      mediumpurple: 0x9370dbff,\n      mediumseagreen: 0x3cb371ff,\n      mediumslateblue: 0x7b68eeff,\n      mediumspringgreen: 0x00fa9aff,\n      mediumturquoise: 0x48d1ccff,\n      mediumvioletred: 0xc71585ff,\n      midnightblue: 0x191970ff,\n      mintcream: 0xf5fffaff,\n      mistyrose: 0xffe4e1ff,\n      moccasin: 0xffe4b5ff,\n      navajowhite: 0xffdeadff,\n      navy: 0x000080ff,\n      oldlace: 0xfdf5e6ff,\n      olive: 0x808000ff,\n      olivedrab: 0x6b8e23ff,\n      orange: 0xffa500ff,\n      orangered: 0xff4500ff,\n      orchid: 0xda70d6ff,\n      palegoldenrod: 0xeee8aaff,\n      palegreen: 0x98fb98ff,\n      paleturquoise: 0xafeeeeff,\n      palevioletred: 0xdb7093ff,\n      papayawhip: 0xffefd5ff,\n      peachpuff: 0xffdab9ff,\n      peru: 0xcd853fff,\n      pink: 0xffc0cbff,\n      plum: 0xdda0ddff,\n      powderblue: 0xb0e0e6ff,\n      purple: 0x800080ff,\n      rebeccapurple: 0x663399ff,\n      red: 0xff0000ff,\n      rosybrown: 0xbc8f8fff,\n      royalblue: 0x4169e1ff,\n      saddlebrown: 0x8b4513ff,\n      salmon: 0xfa8072ff,\n      sandybrown: 0xf4a460ff,\n      seagreen: 0x2e8b57ff,\n      seashell: 0xfff5eeff,\n      sienna: 0xa0522dff,\n      silver: 0xc0c0c0ff,\n      skyblue: 0x87ceebff,\n      slateblue: 0x6a5acdff,\n      slategray: 0x708090ff,\n      slategrey: 0x708090ff,\n      snow: 0xfffafaff,\n      springgreen: 0x00ff7fff,\n      steelblue: 0x4682b4ff,\n      tan: 0xd2b48cff,\n      teal: 0x008080ff,\n      thistle: 0xd8bfd8ff,\n      tomato: 0xff6347ff,\n      turquoise: 0x40e0d0ff,\n      violet: 0xee82eeff,\n      wheat: 0xf5deb3ff,\n      white: 0xffffffff,\n      whitesmoke: 0xf5f5f5ff,\n      yellow: 0xffff00ff,\n      yellowgreen: 0x9acd32ff,\n    });\n\nfunction normalizeColor(color: unknown): number | null {\n  'worklet';\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  const matchers = getMatchers();\n\n  let match: RegExpExecArray | null | undefined;\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers?.hex6?.exec(color))) {\n    return Number.parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names[color] !== undefined) {\n    return names[color];\n  }\n\n  if ((match = matchers?.rgb?.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers?.rgba?.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        parse1(match[4])) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers?.hex3?.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16\n      ) >>> 0\n    );\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers?.hex8?.exec(color))) {\n    return Number.parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers?.hex4?.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16\n      ) >>> 0\n    );\n  }\n\n  if ((match = matchers?.hsl?.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers?.hsla?.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        parse1(match[4])) >>> // a\n      0\n    );\n  }\n\n  return null;\n}\n\nexport const opacity = (c: number): number => {\n  'worklet';\n  return ((c >> 24) & 255) / 255;\n};\n\nexport const red = (c: number): number => {\n  'worklet';\n  return (c >> 16) & 255;\n};\n\nexport const green = (c: number): number => {\n  'worklet';\n  return (c >> 8) & 255;\n};\n\nexport const blue = (c: number): number => {\n  'worklet';\n  return c & 255;\n};\n\nexport const rgbaColor = (\n  r: number,\n  g: number,\n  b: number,\n  alpha = 1\n): number | string => {\n  'worklet';\n  if (Platform.OS === 'web' || !_WORKLET) {\n    return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n  }\n\n  const c =\n    Math.round(alpha * 255) * (1 << 24) +\n    Math.round(r) * (1 << 16) +\n    Math.round(g) * (1 << 8) +\n    Math.round(b);\n  if (Platform.OS === 'android') {\n    // on Android color is represented as signed 32 bit int\n    return c < (1 << 31) >>> 0 ? c : c - 4294967296; // 4294967296 == Math.pow(2, 32);\n  }\n  return c;\n};\n\n/* accepts parameters\n * r  Object = {r:x, g:y, b:z}\n * OR\n * r, g, b\n * 0 <= r, g, b <= 255\n * returns 0 <= h, s, v <= 1\n */\nexport function RGBtoHSV(rgb: RGB): HSV;\nexport function RGBtoHSV(r: number, g: number, b: number): HSV;\nexport function RGBtoHSV(r: any, g?: any, b?: any): HSV {\n  'worklet';\n  /* eslint-disable */\n  if (arguments.length === 1) {\n    g = r.g;\n    b = r.b;\n    r = r.r;\n  }\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n  const v = max / 255;\n\n  let h;\n\n  switch (max) {\n    default:\n    /* fallthrough */\n    case min:\n      h = 0;\n      break;\n    case r:\n      h = g - b + d * (g < b ? 6 : 0);\n      h /= 6 * d;\n      break;\n    case g:\n      h = b - r + d * 2;\n      h /= 6 * d;\n      break;\n    case b:\n      h = r - g + d * 4;\n      h /= 6 * d;\n      break;\n  }\n\n  return {\n    h: h,\n    s: s,\n    v: v,\n  };\n  /* eslint-enable */\n}\n\n/* accepts parameters\n * h  Object = {h:x, s:y, v:z}\n * OR\n * h, s, v\n * 0 <= h, s, v <= 1\n * returns 0 <= r, g, b <= 255\n */\nfunction HSVtoRGB(hsv: HSV): RGB;\nfunction HSVtoRGB(h: number, s: number, v: number): RGB;\nfunction HSVtoRGB(h: any, s?: any, v?: any) {\n  'worklet';\n  /* eslint-disable */\n  var r, g, b, i, f, p, q, t;\n  if (arguments.length === 1) {\n    s = h.s;\n    v = h.v;\n    h = h.h;\n  }\n  i = Math.floor(h * 6);\n  f = h * 6 - i;\n  p = v * (1 - s);\n  q = v * (1 - f * s);\n  t = v * (1 - (1 - f) * s);\n  switch (i % 6) {\n    case 0:\n      (r = v), (g = t), (b = p);\n      break;\n    case 1:\n      (r = q), (g = v), (b = p);\n      break;\n    case 2:\n      (r = p), (g = v), (b = t);\n      break;\n    case 3:\n      (r = p), (g = q), (b = v);\n      break;\n    case 4:\n      (r = t), (g = p), (b = v);\n      break;\n    case 5:\n      (r = v), (g = p), (b = q);\n      break;\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  };\n  /* eslint-enable */\n}\n\nexport const hsvToColor = (\n  h: number,\n  s: number,\n  v: number,\n  a: number\n): number | string => {\n  'worklet';\n  const { r, g, b } = HSVtoRGB(h, s, v);\n  return rgbaColor(r, g, b, a);\n};\n\nexport function processColorInitially(\n  color: unknown\n): number | null | undefined {\n  'worklet';\n  if (color === null || color === undefined || typeof color === 'number') {\n    return color;\n  }\n\n  let normalizedColor = normalizeColor(color);\n\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  normalizedColor = ((normalizedColor << 24) | (normalizedColor >>> 8)) >>> 0; // argb\n  return normalizedColor;\n}\n\nexport function isColor(value: unknown): boolean {\n  'worklet';\n  if (typeof value !== 'string') {\n    return false;\n  }\n  return processColorInitially(value) != null;\n}\n\nexport function processColor(color: unknown): number | null | undefined {\n  'worklet';\n  let normalizedColor = processColorInitially(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  if (Platform.OS === 'android') {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    normalizedColor = normalizedColor | 0x0;\n  }\n\n  return normalizedColor;\n}\n\nexport type ParsedColorArray = [number, number, number, number];\n\nexport function convertToRGBA(color: unknown): ParsedColorArray {\n  'worklet';\n  const processedColor = processColorInitially(color)!; // argb;\n  const a = (processedColor >>> 24) / 255;\n  const r = ((processedColor << 8) >>> 24) / 255;\n  const g = ((processedColor << 16) >>> 24) / 255;\n  const b = ((processedColor << 24) >>> 24) / 255;\n  return [r, g, b, a];\n}\n\nexport function rgbaArrayToRGBAColor(RGBA: ParsedColorArray): string {\n  'worklet';\n  return `rgba(${Math.round(RGBA[0] * 255)}, ${Math.round(\n    RGBA[1] * 255\n  )}, ${Math.round(RGBA[2] * 255)}, ${RGBA[3]})`;\n}\n\nexport function toLinearSpace(\n  RGBA: ParsedColorArray,\n  gamma = 2.2\n): ParsedColorArray {\n  'worklet';\n  const res = [];\n  for (let i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], gamma));\n  }\n  res.push(RGBA[3]);\n  return res as ParsedColorArray;\n}\n\nexport function toGammaSpace(\n  RGBA: ParsedColorArray,\n  gamma = 2.2\n): ParsedColorArray {\n  'worklet';\n  const res = [];\n  for (let i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], 1 / gamma));\n  }\n  res.push(RGBA[3]);\n  return res as ParsedColorArray;\n}\n"]},"metadata":{},"sourceType":"module"}