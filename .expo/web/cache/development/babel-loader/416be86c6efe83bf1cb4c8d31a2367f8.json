{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditChat(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chat_id = _useState4[0],\n    setChatId = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatDetails = _useState6[0],\n    setChatDetails = _useState6[1];\n  var handleChatIdChange = function handleChatIdChange(text) {\n    setChatId(text);\n  };\n  useEffect(function () {\n    var fetchChatDetails = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var token = yield AsyncStorage.getItem('@token');\n        var id = yield AsyncStorage.getItem('@id');\n        var url = \"http://localhost:3333/api/1.0.0/chat/\" + chat_id;\n        var options = {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          }\n        };\n        try {\n          var response = yield fetch(url, options);\n          var data = yield response.json();\n          setChatDetails(data);\n        } catch (error) {\n          console.error(error);\n          Alert.alert('Error', 'Failed to fetch chat details');\n        }\n      });\n      return function fetchChatDetails() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    if (chat_id) {\n      fetchChatDetails();\n    }\n  }, [chat_id]);\n  console.log(chat_id, 'This is chat name');\n  var handleSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!chatId) {\n        Alert.alert('Error', 'Please Enter Chat ID');\n        return;\n      }\n      if (!name) {\n        Alert.alert('Error', 'Please Enter Chat name');\n        return;\n      }\n      var token = yield AsyncStorage.getItem('@token');\n      var url = \"http://localhost:3333/api/1.0.0/chat/\" + chatId;\n      var body = {\n        name: name\n      };\n      var options = {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Authorization': token\n        },\n        body: JSON.stringify(body)\n      };\n      try {\n        var response = yield fetch(url, options);\n        var data = yield response.json();\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n        Alert.alert('Error', 'Failed to update chat details');\n        return;\n      }\n      var chatDetails = {\n        chatId: chatId,\n        name: name\n      };\n      yield AsyncStorage.setItem('chatDetail', JSON.stringify(chatDetails));\n      Alert.alert('Success', 'Chat details updated successfully');\n    });\n    return function handleSubmit() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.scrollContainer,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Edit Chat\"\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Chat ID:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Chat ID\",\n        value: chatId,\n        onChangeText: handleChatIdChange\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Chat Name:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Chat Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSubmit,\n        children: _jsx(Ionicons, {\n          name: \"save\",\n          size: 30,\n          color: \"black\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Ionicons, {\n          name: \"ios-backspace-sharp\",\n          size: 30,\n          color: \"black\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n    overflow: 'scroll'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: '50'\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white'\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 30,\n    color: 'green',\n    marginBottom: 50\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: 50\n  }\n});\nexport default EditChat;","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","Ionicons","EditChat","navigation","name","setName","chat_id","setChatId","chatDetails","setChatDetails","handleChatIdChange","text","fetchChatDetails","token","getItem","id","url","options","method","headers","response","fetch","data","json","error","console","Alert","alert","log","handleSubmit","chatId","body","JSON","stringify","setItem","styles","scrollContainer","container","title","label","input","button","goBack","StyleSheet","create","flexGrow","justifyContent","alignItems","backgroundColor","flex","overflow","fontSize","fontWeight","marginTop","alignSelf","marginLeft","borderWidth","borderColor","borderRadius","padding","margin","width","color","paddingVertical","paddingHorizontal","marginBottom","buttonText","image","height"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/EditChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  TextInput,\n  Alert,\n  ScrollView,\n} from 'react-native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { Ionicons } from '@expo/vector-icons'\n\nfunction EditChat({ navigation }) {\n  const [name, setName] = useState('')\n  const [chat_id, setChatId] = useState('')\n  const [chatDetails, setChatDetails] = useState(null)\n\n  const handleChatIdChange = (text) => {\n    setChatId(text)\n  }\n\n  useEffect(() => {\n    // Fetch chat details from API when chatId changes\n    const fetchChatDetails = async () => {\n      // Get user id and token from AsyncStorage\n      const token = await AsyncStorage.getItem('@token')\n      const id = await AsyncStorage.getItem('@id')\n\n      // Make API call to fetch chat details\n      const url = `http://localhost:3333/api/1.0.0/chat/${chat_id}`\n      const options = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Authorization': token,\n        },\n      }\n\n      try {\n        const response = await fetch(url, options)\n        const data = await response.json()\n        setChatDetails(data) // Update the chatDetails state with the fetched data\n      } catch (error) {\n        console.error(error)\n        Alert.alert('Error', 'Failed to fetch chat details')\n      }\n    }\n\n    if (chat_id) {\n      fetchChatDetails()\n    }\n  }, [chat_id])\n  console.log(chat_id, 'This is chat name')\n  const handleSubmit = async () => {\n    // Validate form fields\n    if (!chatId) {\n      Alert.alert('Error', 'Please Enter Chat ID')\n      return\n    }\n    if (!name) {\n      Alert.alert('Error', 'Please Enter Chat name')\n      return\n    }\n\n    // Get user id and token from AsyncStorage\n    const token = await AsyncStorage.getItem('@token')\n\n    // Make API call to update chat details\n    const url = `http://localhost:3333/api/1.0.0/chat/${chatId}`\n    const body = { name }\n    const options = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Authorization': token,\n      },\n      body: JSON.stringify(body),\n    }\n\n    try {\n      const response = await fetch(url, options)\n      const data = await response.json()\n      console.log(data) // Do something with the API response\n    } catch (error) {\n      console.error(error)\n      Alert.alert('Error', 'Failed to update chat details')\n      return\n    }\n\n    // Save chat details to AsyncStorage\n    const chatDetails = { chatId, name }\n    await AsyncStorage.setItem('chatDetail', JSON.stringify(chatDetails))\n\n    // Show success message\n    Alert.alert('Success', 'Chat details updated successfully')\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\n      <View style={styles.container}>\n        <Text style={styles.title}>Edit Chat</Text>\n\n        <Text style={styles.label}>Chat ID:</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Enter Chat ID\"\n          value={chatId}\n          onChangeText={handleChatIdChange}\n        />\n\n        <Text style={styles.label}>Chat Name:</Text>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Enter Chat Name\"\n          value={name}\n          onChangeText={(text) => setName(text)}\n        />\n\n        <TouchableOpacity style={styles.button} onPress={handleSubmit}>\n          <Ionicons name=\"save\" size={30} color=\"black\" />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.goBack()}\n        >\n          <Ionicons name=\"ios-backspace-sharp\" size={30} color=\"black\" />\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n    overflow: 'scroll',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: '50',\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white',\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 30,\n    color: 'green',\n    marginBottom: 50,\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginTop: 50,\n  },\n})\n\nexport default EditChat\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}