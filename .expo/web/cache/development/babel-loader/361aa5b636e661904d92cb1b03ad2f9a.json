{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ViewContact() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    user_id = _useState2[0],\n    setUserId = _useState2[1];\n  var Addto = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        console.log(token, 'print token');\n        if (!user_id) {\n          console.log('User ID is empty');\n          return;\n        }\n        fetch('http://localhost:3333/api/1.0.0/user/' + user_id + '/contact', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          }\n        }).then(function () {\n          var _ref2 = _asyncToGenerator(function* (response) {\n            return response.json();\n          });\n          return function (_x) {\n            return _ref2.apply(this, arguments);\n          };\n        }()).then(function (data) {\n          return console.log(data, 'this is data');\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function Addto() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputView,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Enter ID \"\n      }), _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Enter ID\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(user_id) {\n          return setUserId(user_id);\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: Addto,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default ViewContact;","map":{"version":3,"names":["React","useState","TouchableOpacity","AsyncStorage","ViewContact","user_id","setUserId","Addto","token","getItem","console","log","fetch","method","headers","then","response","json","data","error","styles","container","inputView","title","TextInput","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderRadius","marginTop","color"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/ViewContact.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, TextInput, Alert } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction ViewContact() {\n  const [user_id, setUserId] = useState('')\n\n  const Addto = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      console.log(token, 'print token')\n\n      if (!user_id) {\n        console.log('User ID is empty')\n        return\n      }\n\n      fetch('http://localhost:3333/api/1.0.0/user/' + user_id + '/contact', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Authorization': token,\n        },\n      })\n        .then(async (response) => response.json())\n        .then((data) => console.log(data, 'this is data'))\n\n      //     console.log('Add contacts sent to api')\n      //     if (response.status === 200) {\n      //       console.log('User ' + user_id + ' added to contacts')\n      //       setUserId(user_id)\n      //     } else if (response.status === 400) {\n      //       console.log('You cannot add yourself')\n      //     } else if (response.status === 404) {\n      //       console.log('User not found')\n      //     } else {\n      //       throw 'something went wrong'\n      //     }\n      //   }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputView}>\n        <Text style={styles.title}>Enter ID </Text>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Enter ID\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(user_id) => setUserId(user_id)}\n        />\n      </View>\n      <TouchableOpacity style={styles.button} onPress={Addto}>\n        <Text style={styles.buttonText}>Add</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default ViewContact\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvC,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,OAAOC,YAAY,MAAM,2CAA2C;AAAA;AAAA;AAEpE,SAASC,WAAW,GAAG;EACrB,gBAA6BH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAlCI,OAAO;IAAEC,SAAS;EAEzB,IAAMC,KAAK;IAAA,6BAAG,aAAY;MACxB,IAAI;QACF,IAAMC,KAAK,SAASL,YAAY,CAACM,OAAO,CAAC,QAAQ,CAAC;QAClDC,OAAO,CAACC,GAAG,CAACH,KAAK,EAAE,aAAa,CAAC;QAEjC,IAAI,CAACH,OAAO,EAAE;UACZK,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UAC/B;QACF;QAEAC,KAAK,CAAC,uCAAuC,GAAGP,OAAO,GAAG,UAAU,EAAE;UACpEQ,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,iBAAiB,EAAEN;UACrB;QACF,CAAC,CAAC,CACCO,IAAI;UAAA,8BAAC,WAAOC,QAAQ;YAAA,OAAKA,QAAQ,CAACC,IAAI,EAAE;UAAA;UAAA;YAAA;UAAA;QAAA,IAAC,CACzCF,IAAI,CAAC,UAACG,IAAI;UAAA,OAAKR,OAAO,CAACC,GAAG,CAACO,IAAI,EAAE,cAAc,CAAC;QAAA,EAAC;MActD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MACpB;IACF,CAAC;IAAA,gBAnCKZ,KAAK;MAAA;IAAA;EAAA,GAmCV;EACD,OACE,MAAC,IAAI;IAAC,KAAK,EAAEa,MAAM,CAACC,SAAU;IAAA,WAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,SAAU;MAAA,WAC5B,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,KAAM;QAAA,UAAC;MAAS,EAAO,EAC3C,KAAC,SAAS;QACR,KAAK,EAAEH,MAAM,CAACI,SAAU;QACxB,WAAW,EAAC,UAAU;QACtB,oBAAoB,EAAC,SAAS;QAC9B,YAAY,EAAE,sBAACnB,OAAO;UAAA,OAAKC,SAAS,CAACD,OAAO,CAAC;QAAA;MAAC,EAC9C;IAAA,EACG,EACP,KAAC,gBAAgB;MAAC,KAAK,EAAEe,MAAM,CAACK,MAAO;MAAC,OAAO,EAAElB,KAAM;MAAA,UACrD,KAAC,IAAI;QAAC,KAAK,EAAEa,MAAM,CAACM,UAAW;QAAA,UAAC;MAAG;IAAO,EACzB;EAAA,EACd;AAEX;AAEA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDT,KAAK,EAAE;IACLU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDV,MAAM,EAAE;IACNO,eAAe,EAAE,OAAO;IACxBI,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,GAAG;IACjBC,SAAS,EAAE,EAAE;IACbC,KAAK,EAAE;EACT,CAAC;EACDd,UAAU,EAAE;IACVc,KAAK,EAAE,OAAO;IACdP,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe9B,WAAW"},"metadata":{},"sourceType":"module"}