{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction singlechat() {\n  var _useState = useState(singlechat),\n    _useState2 = _slicedToArray(_useState, 2),\n    singlechat = _useState2[0],\n    setSingleChat = _useState2[1];\n  var fsinglechat = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var id = yield AsyncStorage.getItem('@id');\n      var token = yield AsyncStorage.getItem('@token');\n      var response = yield fetch('http://localhost:3333/api/1.0.0/chat/' + id, {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n          'content-type': Text / plain\n        }\n      });\n    });\n    return function fsinglechat() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Single Chat Details\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      defaultValue: singlechat,\n      placeholder: singlechat,\n      value: singlechat,\n      onChangeText: function onChangeText(text) {\n        return setSingleChat(text);\n      }\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: fsinglechat,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Get chat\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white'\n  },\n  error: {\n    fontSize: 16,\n    color: 'red'\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default singlechat;","map":{"version":3,"names":["React","useState","useEffect","TextInput","AsyncStorage","singlechat","setSingleChat","fsinglechat","id","getItem","token","response","fetch","method","headers","Text","plain","styles","container","title","input","text","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","label","marginTop","alignSelf","marginLeft","borderWidth","borderColor","borderRadius","padding","margin","width","color","error","paddingVertical","paddingHorizontal"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/singlechat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction singlechat() {\n  const [singlechat, setSingleChat] = useState(singlechat)\n\n  const fsinglechat = async () => {\n    const id = await AsyncStorage.getItem('@id')\n    const token = await AsyncStorage.getItem('@token')\n\n    const response = await fetch('http://localhost:3333/api/1.0.0/chat/' + id, {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n        'content-type': Text / plain,\n      },\n    })\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Single Chat Details</Text>\n      <TextInput\n        style={styles.input}\n        defaultValue={singlechat}\n        placeholder={singlechat}\n        value={singlechat}\n        onChangeText={(text) => setSingleChat(text)}\n      />\n      <TouchableOpacity style={styles.button} onPress={fsinglechat}>\n        <Text style={styles.buttonText}>Get chat</Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white',\n  },\n  error: {\n    fontSize: 16,\n    color: 'red',\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default singlechat\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAElD,SAASC,SAAS,QAAQ,8BAA8B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AAAA;AAAA;AAEpE,SAASC,UAAU,GAAG;EACpB,gBAAoCJ,QAAQ,CAACI,UAAU,CAAC;IAAA;IAAjDA,UAAU;IAAEC,aAAa;EAEhC,IAAMC,WAAW;IAAA,6BAAG,aAAY;MAC9B,IAAMC,EAAE,SAASJ,YAAY,CAACK,OAAO,CAAC,KAAK,CAAC;MAC5C,IAAMC,KAAK,SAASN,YAAY,CAACK,OAAO,CAAC,QAAQ,CAAC;MAElD,IAAME,QAAQ,SAASC,KAAK,CAAC,uCAAuC,GAAGJ,EAAE,EAAE;QACzEK,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,iBAAiB,EAAEJ,KAAK;UACxB,cAAc,EAAEK,IAAI,GAAGC;QACzB;MACF,CAAC,CAAC;IACJ,CAAC;IAAA,gBAXKT,WAAW;MAAA;IAAA;EAAA,GAWhB;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEU,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,KAAM;MAAA,UAAC;IAAmB,EAAO,EACrD,KAAC,SAAS;MACR,KAAK,EAAEF,MAAM,CAACG,KAAM;MACpB,YAAY,EAAEf,UAAW;MACzB,WAAW,EAAEA,UAAW;MACxB,KAAK,EAAEA,UAAW;MAClB,YAAY,EAAE,sBAACgB,IAAI;QAAA,OAAKf,aAAa,CAACe,IAAI,CAAC;MAAA;IAAC,EAC5C,EACF,KAAC,gBAAgB;MAAC,KAAK,EAAEJ,MAAM,CAACK,MAAO;MAAC,OAAO,EAAEf,WAAY;MAAA,UAC3D,KAAC,IAAI;QAAC,KAAK,EAAEU,MAAM,CAACM,UAAW;QAAA,UAAC;MAAQ;IAAO,EAC9B;EAAA,EACd;AAEX;AACA,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDV,KAAK,EAAE;IACLW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDC,KAAK,EAAE;IACLH,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBG,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,YAAY;IACvBC,UAAU,EAAE;EACd,CAAC;EACDhB,KAAK,EAAE;IACLiB,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,GAAG;IACVZ,QAAQ,EAAE,EAAE;IACZa,KAAK,EAAE;EACT,CAAC;EACDC,KAAK,EAAE;IACLd,QAAQ,EAAE,EAAE;IACZa,KAAK,EAAE;EACT,CAAC;EACDrB,MAAM,EAAE;IACNO,eAAe,EAAE,OAAO;IACxBgB,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBP,YAAY,EAAE,CAAC;IACfL,SAAS,EAAE,EAAE;IACbS,KAAK,EAAE;EACT,CAAC;EACDpB,UAAU,EAAE;IACVoB,KAAK,EAAE,OAAO;IACdb,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAe1B,UAAU"},"metadata":{},"sourceType":"module"}