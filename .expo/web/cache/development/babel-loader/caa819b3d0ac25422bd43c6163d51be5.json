{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Chats(props) {\n  var navigation = useNavigation();\n  console.log(props, 'this is props');\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatMessages = _useState4[0],\n    setChatMessages = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chat_id = _useState6[0],\n    setChatId = _useState6[1];\n  useEffect(function () {\n    console.log(props.route.params, 'WWWWW');\n    setChatId(props.route.params);\n  }, []);\n  var sendMessage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      console.log(message, 'this is message');\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/chat/' + chat_id + '/message', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          },\n          body: JSON.stringify({\n            message: message\n          })\n        });\n        var data = yield response();\n        console.log(data, 'this is data');\n        if (response.ok) {} else {\n          throw new Error('Failed to send message');\n        }\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return function sendMessage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      value: message,\n      onChangeText: setMessage,\n      placeholder: \"Type your message\",\n      style: styles.input\n    }), _jsx(TouchableOpacity, {\n      onPress: sendMessage,\n      children: _jsx(Ionicons, {\n        name: \"send\",\n        size: 24,\n        color: \"white\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Ionicons, {\n        name: \"ios-backspace-sharp\",\n        size: 30,\n        color: \"black\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    alignItems: 'center'\n  },\n  input: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 20\n  },\n  headerTitle: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  message: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 10\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useEffect","useNavigation","HeaderBackButton","Ionicons","AsyncStorage","Chats","props","navigation","console","log","message","setMessage","chatMessages","setChatMessages","chat_id","setChatId","route","params","sendMessage","token","getItem","response","fetch","method","headers","body","JSON","stringify","data","ok","Error","error","Alert","alert","styles","container","input","button","goBack","StyleSheet","create","flex","backgroundColor","padding","alignItems","borderRadius","width","marginBottom","headerTitle","fontSize","color"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Alert,\n  TouchableOpacity,\n} from 'react-native'\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction Chats(props) {\n  const navigation = useNavigation()\n  console.log(props, 'this is props')\n  const [message, setMessage] = useState('')\n  const [chatMessages, setChatMessages] = useState([])\n  const [chat_id, setChatId] = useState(null)\n\n  useEffect(() => {\n    console.log(props.route.params, 'WWWWW')\n    setChatId(props.route.params)\n  }, [])\n\n  const sendMessage = async () => {\n    console.log(message, 'this is message')\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const response = await fetch(\n        'http://localhost:3333/api/1.0.0/chat/' + chat_id + '/message',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n          body: JSON.stringify({ message }),\n        }\n      )\n      const data = await response()\n\n      console.log(data, 'this is data')\n\n      if (response.ok) {\n        // handle success\n      } else {\n        throw new Error('Failed to send message')\n      }\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        value={message}\n        onChangeText={setMessage}\n        placeholder=\"Type your message\"\n        style={styles.input}\n      />\n      <TouchableOpacity onPress={sendMessage}>\n        <Ionicons name=\"send\" size={24} color=\"white\" />\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.goBack()}\n      >\n        <Ionicons name=\"ios-backspace-sharp\" size={30} color=\"black\" />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    alignItems: 'center',\n  },\n  input: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 20,\n  },\n  headerTitle: {\n    fontSize: 20,\n    color: '#fff',\n  },\n  message: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n\n    padding: 10,\n    width: '100%',\n    marginBottom: 10,\n  },\n})\n\nexport default Chats\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}