{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Chats() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  function sendMessage() {\n    return _sendMessage.apply(this, arguments);\n  }\n  function _sendMessage() {\n    _sendMessage = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/chat/' + chat_id + '/message', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: token\n          },\n          body: JSON.stringify({\n            message: message\n          })\n        });\n        if (response.ok) {} else {\n          throw new Error('Failed to send message');\n        }\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return _sendMessage.apply(this, arguments);\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.chatContainer,\n      children: [_jsx(Text, {\n        style: styles.chatTitle,\n        children: \"Chat\"\n      }), _jsx(View, {\n        style: styles.messageContainer\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(TextInput, {\n          value: message,\n          onChangeText: setMessage,\n          placeholder: \"Type your message\",\n          style: styles.input\n        }), _jsx(TouchableOpacity, {\n          onPress: sendMessage,\n          style: styles.sendButton,\n          children: _jsx(Ionicons, {\n            name: \"send\",\n            size: 24,\n            color: \"white\"\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F0E68C',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  chatContainer: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  chatTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 10\n  },\n  messageContainer: {\n    flex: 1,\n    padding: 10\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#ccc',\n    padding: 10\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 20,\n    paddingHorizontal: 20,\n    marginRight: 10\n  },\n  sendButton: {\n    backgroundColor: '#808000',\n    borderRadius: 20,\n    padding: 10\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useNavigation","Ionicons","AsyncStorage","Chats","navigation","message","setMessage","sendMessage","token","getItem","response","fetch","chat_id","method","headers","Authorization","body","JSON","stringify","ok","Error","error","Alert","alert","styles","container","chatContainer","chatTitle","messageContainer","inputContainer","input","sendButton","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","borderRadius","overflow","fontSize","fontWeight","textAlign","marginTop","marginBottom","padding","flexDirection","borderTopWidth","borderTopColor","borderColor","borderWidth","paddingHorizontal","marginRight"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState } from 'react'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Alert,\n  TouchableOpacity,\n} from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction Chats() {\n  const navigation = useNavigation()\n  const [message, setMessage] = useState('')\n\n  async function sendMessage() {\n    try {\n      const token = await AsyncStorage.getItem('token')\n      const response = await fetch(\n        'http://localhost:3333/api/1.0.0/chat/' + chat_id + '/message',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: token,\n          },\n          body: JSON.stringify({ message }),\n        }\n      )\n      if (response.ok) {\n        // handle success\n      } else {\n        throw new Error('Failed to send message')\n      }\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.chatContainer}>\n        <Text style={styles.chatTitle}>Chat</Text>\n        <View style={styles.messageContainer}>\n          {/* Render messages here */}\n        </View>\n        <View style={styles.inputContainer}>\n          <TextInput\n            value={message}\n            onChangeText={setMessage}\n            placeholder=\"Type your message\"\n            style={styles.input}\n          />\n          <TouchableOpacity onPress={sendMessage} style={styles.sendButton}>\n            <Ionicons name=\"send\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F0E68C',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  chatContainer: {\n    width: '80%',\n    height: '80%',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    overflow: 'hidden',\n  },\n  chatTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 20,\n    marginBottom: 10,\n  },\n  messageContainer: {\n    flex: 1,\n    padding: 10,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: '#ccc',\n    padding: 10,\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 20,\n    paddingHorizontal: 20,\n    marginRight: 10,\n  },\n  sendButton: {\n    backgroundColor: '#808000',\n    borderRadius: 20,\n    padding: 10,\n  },\n})\n\nexport default Chats\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASvC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,YAAY,MAAM,2CAA2C;AAAA;AAAA;AAEpE,SAASC,KAAK,GAAG;EACf,IAAMC,UAAU,GAAGJ,aAAa,EAAE;EAClC,gBAA8BD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCM,OAAO;IAAEC,UAAU;EAAgB,SAE3BC,WAAW;IAAA;EAAA;EAAA;IAAA,iCAA1B,aAA6B;MAC3B,IAAI;QACF,IAAMC,KAAK,SAASN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;QACjD,IAAMC,QAAQ,SAASC,KAAK,CAC1B,uCAAuC,GAAGC,OAAO,GAAG,UAAU,EAC9D;UACEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAEP;UACjB,CAAC;UACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEb,OAAO,EAAPA;UAAQ,CAAC;QAClC,CAAC,CACF;QACD,IAAIK,QAAQ,CAACS,EAAE,EAAE,CAEjB,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,KAAK,CAACC,KAAK,CAAC,OAAO,EAAEF,KAAK,CAAChB,OAAO,CAAC;MACrC;IACF,CAAC;IAAA;EAAA;EAED,OACE,KAAC,IAAI;IAAC,KAAK,EAAEmB,MAAM,CAACC,SAAU;IAAA,UAC5B,MAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,aAAc;MAAA,WAChC,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,SAAU;QAAA,UAAC;MAAI,EAAO,EAC1C,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACI;MAAiB,EAE9B,EACP,MAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACK,cAAe;QAAA,WACjC,KAAC,SAAS;UACR,KAAK,EAAExB,OAAQ;UACf,YAAY,EAAEC,UAAW;UACzB,WAAW,EAAC,mBAAmB;UAC/B,KAAK,EAAEkB,MAAM,CAACM;QAAM,EACpB,EACF,KAAC,gBAAgB;UAAC,OAAO,EAAEvB,WAAY;UAAC,KAAK,EAAEiB,MAAM,CAACO,UAAW;UAAA,UAC/D,KAAC,QAAQ;YAAC,IAAI,EAAC,MAAM;YAAC,IAAI,EAAE,EAAG;YAAC,KAAK,EAAC;UAAO;QAAG,EAC/B;MAAA,EACd;IAAA;EACF,EACF;AAEX;AAEA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAM,CAAC;EAC/BR,SAAS,EAAE;IACTS,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDX,aAAa,EAAE;IACbY,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbJ,eAAe,EAAE,OAAO;IACxBK,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDd,SAAS,EAAE;IACTe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE;EAChB,CAAC;EACDlB,gBAAgB,EAAE;IAChBM,IAAI,EAAE,CAAC;IACPa,OAAO,EAAE;EACX,CAAC;EACDlB,cAAc,EAAE;IACdmB,aAAa,EAAE,KAAK;IACpBZ,UAAU,EAAE,QAAQ;IACpBa,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,MAAM;IACtBH,OAAO,EAAE;EACX,CAAC;EACDjB,KAAK,EAAE;IACLI,IAAI,EAAE,CAAC;IACPK,MAAM,EAAE,EAAE;IACVY,WAAW,EAAE,MAAM;IACnBC,WAAW,EAAE,CAAC;IACdZ,YAAY,EAAE,EAAE;IAChBa,iBAAiB,EAAE,EAAE;IACrBC,WAAW,EAAE;EACf,CAAC;EACDvB,UAAU,EAAE;IACVI,eAAe,EAAE,SAAS;IAC1BK,YAAY,EAAE,EAAE;IAChBO,OAAO,EAAE;EACX;AACF,CAAC,CAAC;AAEF,eAAe5C,KAAK"},"metadata":{},"sourceType":"module"}