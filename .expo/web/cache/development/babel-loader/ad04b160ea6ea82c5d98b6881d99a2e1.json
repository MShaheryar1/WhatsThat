{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { withTiming, withSpring } from \"../../animation\";\nimport { BaseAnimationBuilder } from \"./BaseAnimationBuilder\";\nexport var ComplexAnimationBuilder = function (_BaseAnimationBuilder) {\n  _inherits(ComplexAnimationBuilder, _BaseAnimationBuilder);\n  var _super = _createSuper(ComplexAnimationBuilder);\n  function ComplexAnimationBuilder() {\n    var _this;\n    _classCallCheck(this, ComplexAnimationBuilder);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"easingV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"rotateV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"type\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"dampingV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"massV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"stiffnessV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"overshootClampingV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"restDisplacementThresholdV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"restSpeedThresholdV\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"initialValues\", void 0);\n    return _this;\n  }\n  _createClass(ComplexAnimationBuilder, [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      this.easingV = easingFunction;\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      this.rotateV = degree;\n      return this;\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      this.type = withSpring;\n      return this;\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping2) {\n      this.dampingV = _damping2;\n      return this;\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass2) {\n      this.massV = _mass2;\n      return this;\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness2) {\n      this.stiffnessV = _stiffness2;\n      return this;\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping2) {\n      this.overshootClampingV = _overshootClamping2;\n      return this;\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold2) {\n      this.restDisplacementThresholdV = _restDisplacementThreshold2;\n      return this;\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold2) {\n      this.restSpeedThresholdV = _restSpeedThreshold2;\n      return this;\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      this.initialValues = values;\n      return this;\n    }\n  }, {\n    key: \"getAnimationAndConfig\",\n    value: function getAnimationAndConfig() {\n      var duration = this.durationV;\n      var easing = this.easingV;\n      var rotate = this.rotateV;\n      var type = this.type ? this.type : withTiming;\n      var damping = this.dampingV;\n      var mass = this.massV;\n      var stiffness = this.stiffnessV;\n      var overshootClamping = this.overshootClampingV;\n      var restDisplacementThreshold = this.restDisplacementThresholdV;\n      var restSpeedThreshold = this.restSpeedThresholdV;\n      var animation = type;\n      var config = {};\n      if (type === withTiming) {\n        if (easing) {\n          config.easing = easing;\n        }\n        if (duration) {\n          config.duration = duration;\n        }\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      } else {\n        if (damping) {\n          config.damping = damping;\n        }\n        if (mass) {\n          config.mass = mass;\n        }\n        if (stiffness) {\n          config.stiffness = stiffness;\n        }\n        if (overshootClamping) {\n          config.overshootClamping = overshootClamping;\n        }\n        if (restDisplacementThreshold) {\n          config.restDisplacementThreshold = restDisplacementThreshold;\n        }\n        if (restSpeedThreshold) {\n          config.restSpeedThreshold = restSpeedThreshold;\n        }\n        if (rotate) {\n          config.rotate = rotate;\n        }\n      }\n      return [animation, config];\n    }\n  }], [{\n    key: \"easing\",\n    value: function easing(easingFunction) {\n      var instance = this.createInstance();\n      return instance.easing(easingFunction);\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(degree) {\n      var instance = this.createInstance();\n      return instance.rotate(degree);\n    }\n  }, {\n    key: \"springify\",\n    value: function springify() {\n      var instance = this.createInstance();\n      return instance.springify();\n    }\n  }, {\n    key: \"damping\",\n    value: function damping(_damping) {\n      var instance = this.createInstance();\n      return instance.damping(_damping);\n    }\n  }, {\n    key: \"mass\",\n    value: function mass(_mass) {\n      var instance = this.createInstance();\n      return instance.mass(_mass);\n    }\n  }, {\n    key: \"stiffness\",\n    value: function stiffness(_stiffness) {\n      var instance = this.createInstance();\n      return instance.stiffness(_stiffness);\n    }\n  }, {\n    key: \"overshootClamping\",\n    value: function overshootClamping(_overshootClamping) {\n      var instance = this.createInstance();\n      return instance.overshootClamping(_overshootClamping);\n    }\n  }, {\n    key: \"restDisplacementThreshold\",\n    value: function restDisplacementThreshold(_restDisplacementThreshold) {\n      var instance = this.createInstance();\n      return instance.restDisplacementThreshold(_restDisplacementThreshold);\n    }\n  }, {\n    key: \"restSpeedThreshold\",\n    value: function restSpeedThreshold(_restSpeedThreshold) {\n      var instance = this.createInstance();\n      return instance.restSpeedThreshold(_restSpeedThreshold);\n    }\n  }, {\n    key: \"withInitialValues\",\n    value: function withInitialValues(values) {\n      var instance = this.createInstance();\n      return instance.withInitialValues(values);\n    }\n  }]);\n  return ComplexAnimationBuilder;\n}(BaseAnimationBuilder);\n_defineProperty(ComplexAnimationBuilder, \"createInstance\", void 0);","map":{"version":3,"mappings":"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","names":["withTiming","withSpring","BaseAnimationBuilder","ComplexAnimationBuilder","_defineProperty","easing","easingFunction","easingV","rotate","degree","rotateV","springify","type","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","restDisplacementThresholdV","restSpeedThreshold","restSpeedThresholdV","withInitialValues","values","initialValues","getAnimationAndConfig","duration","durationV","animation","config","instance","createInstance"],"sources":["ComplexAnimationBuilder.ts"],"sourcesContent":["import { withTiming, withSpring } from '../../animation';\nimport {\n  AnimationFunction,\n  BaseBuilderAnimationConfig,\n  LayoutAnimationAndConfig,\n} from './commonTypes';\nimport { EasingFn } from '../../Easing';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\nimport { StyleProps } from '../../commonTypes';\n\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  easingV?: EasingFn;\n  rotateV?: string;\n  type?: AnimationFunction;\n  dampingV?: number;\n  massV?: number;\n  stiffnessV?: number;\n  overshootClampingV?: number;\n  restDisplacementThresholdV?: number;\n  restSpeedThresholdV?: number;\n  initialValues?: StyleProps;\n\n  static createInstance: () => ComplexAnimationBuilder;\n\n  static easing(easingFunction: EasingFn): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n\n  easing(easingFunction: EasingFn): ComplexAnimationBuilder {\n    this.easingV = easingFunction;\n    return this;\n  }\n\n  static rotate(degree: string): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n\n  rotate(degree: string): ComplexAnimationBuilder {\n    this.rotateV = degree;\n    return this;\n  }\n\n  static springify(): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.springify();\n  }\n\n  springify(): ComplexAnimationBuilder {\n    this.type = withSpring as AnimationFunction;\n    return this;\n  }\n\n  static damping(damping: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n\n  damping(damping: number): ComplexAnimationBuilder {\n    this.dampingV = damping;\n    return this;\n  }\n\n  static mass(mass: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n\n  mass(mass: number): ComplexAnimationBuilder {\n    this.massV = mass;\n    return this;\n  }\n\n  static stiffness(stiffness: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n\n  stiffness(stiffness: number): ComplexAnimationBuilder {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n\n  static overshootClamping(overshootClamping: number): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n\n  overshootClamping(overshootClamping: number): ComplexAnimationBuilder {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n\n  static restDisplacementThreshold(\n    restDisplacementThreshold: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.restDisplacementThreshold(restDisplacementThreshold);\n  }\n\n  restDisplacementThreshold(\n    restDisplacementThreshold: number\n  ): ComplexAnimationBuilder {\n    this.restDisplacementThresholdV = restDisplacementThreshold;\n    return this;\n  }\n\n  static restSpeedThreshold(\n    restSpeedThreshold: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.restSpeedThreshold(restSpeedThreshold);\n  }\n\n  restSpeedThreshold(restSpeedThreshold: number): ComplexAnimationBuilder {\n    this.restSpeedThresholdV = restSpeedThreshold;\n    return this;\n  }\n\n  static withInitialValues(values: StyleProps): BaseAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n\n  withInitialValues(values: StyleProps): BaseAnimationBuilder {\n    this.initialValues = values;\n    return this;\n  }\n\n  getAnimationAndConfig(): LayoutAnimationAndConfig {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : (withTiming as AnimationFunction);\n    const damping = this.dampingV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const restDisplacementThreshold = this.restDisplacementThresholdV;\n    const restSpeedThreshold = this.restSpeedThresholdV;\n\n    const animation = type;\n\n    const config: BaseBuilderAnimationConfig = {};\n\n    if (type === withTiming) {\n      if (easing) {\n        config.easing = easing;\n      }\n      if (duration) {\n        config.duration = duration;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    } else {\n      if (damping) {\n        config.damping = damping;\n      }\n      if (mass) {\n        config.mass = mass;\n      }\n      if (stiffness) {\n        config.stiffness = stiffness;\n      }\n      if (overshootClamping) {\n        config.overshootClamping = overshootClamping;\n      }\n      if (restDisplacementThreshold) {\n        config.restDisplacementThreshold = restDisplacementThreshold;\n      }\n      if (restSpeedThreshold) {\n        config.restSpeedThreshold = restSpeedThreshold;\n      }\n      if (rotate) {\n        config.rotate = rotate;\n      }\n    }\n    return [animation, config];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}