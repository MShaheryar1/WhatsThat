{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Press } from \"react-native-web/dist/index\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Login from \"./Login\";\nimport ChatsScreen from \"./chatsscreen\";\nimport ContactScreen from \"./contactscreen\";\nimport ProfileScreen from \"./profilescreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction main(_ref) {\n  _objectDestructuringEmpty(_ref);\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 1),\n    setToken = _useState2[0];\n  useEffect(function () {\n    var getToken = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var value = yield AsyncStorage.getItem('@token');\n          if (value !== null) {\n            setToken(value);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return function getToken() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getToken();\n  }, []);\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Profile',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var size = _ref3.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"account-circle\",\n            color: \"green\",\n            size: size\n          });\n        }\n      },\n      initialParams: {\n        logout: logout\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ChatsScreen\",\n      component: ChatsScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Chats',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var size = _ref4.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"chat\",\n            color: \"green\",\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ContactsScreen\",\n      component: ContactScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Contacts',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var size = _ref5.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"contacts\",\n            color: \"green\",\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nexport default main;","map":{"version":3,"names":["React","useState","useEffect","Press","AsyncStorage","MaterialCommunityIcons","createBottomTabNavigator","Login","ChatsScreen","ContactScreen","ProfileScreen","Tab","main","setToken","getToken","value","getItem","error","console","log","headerShown","tabBarLabel","tabBarIcon","size","logout"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Press } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from 'react-native-vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Login from './Login';\nimport ChatsScreen from './chatsscreen';\nimport ContactScreen from './contactscreen';\nimport ProfileScreen from './profilescreen';\nconst Tab = createBottomTabNavigator();\n\n\n  function main({ }) {\n    const [ setToken] = useState(null);\n  \n    useEffect(() => {\n      // Check if user has a token stored in async storage to stay logged in\n      const getToken = async () => {\n        try {\n          const value = await AsyncStorage.getItem('@token');\n          if (value !== null) {\n            setToken(value);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n  \n      getToken();\n    },\n      []);\n\n  // Render Chats component if user has logged in\n  return (\n    <Tab.Navigator>\n      <Tab.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Profile',\n          tabBarIcon: ({ size }) => (\n            <MaterialCommunityIcons name=\"account-circle\" color=\"green\" size={size} />\n          ),\n        }}\n        initialParams={{ logout: logout }}\n      />\n      <Tab.Screen\n        name=\"ChatsScreen\"\n        component={ChatsScreen}\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Chats',\n          tabBarIcon: ({ size }) => (\n            <MaterialCommunityIcons name=\"chat\" color=\"green\" size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen name=\"ContactsScreen\" component={ContactScreen}\n        options={{\n          headerShown: false,\n          tabBarLabel: 'Contacts',\n          tabBarIcon: ({ size }) => (\n            <MaterialCommunityIcons name=\"contacts\" color=\"green\" size={size} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n\n  );\n}\nexport default main;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA,SACAC,KAAK;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,sBAAsB;AAC/B,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,KAAK;AACZ,OAAOC,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,aAAa;AAAwB;AAAA;AAC5C,IAAMC,GAAG,GAAGL,wBAAwB,EAAE;AAGpC,SAASM,IAAI,OAAM;EAAA;EACjB,gBAAoBX,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA1BY,QAAQ;EAEhBX,SAAS,CAAC,YAAM;IAEd,IAAMY,QAAQ;MAAA,8BAAG,aAAY;QAC3B,IAAI;UACF,IAAMC,KAAK,SAASX,YAAY,CAACY,OAAO,CAAC,QAAQ,CAAC;UAClD,IAAID,KAAK,KAAK,IAAI,EAAE;YAClBF,QAAQ,CAACE,KAAK,CAAC;UACjB;QACF,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QACpB;MACF,CAAC;MAAA,gBATKH,QAAQ;QAAA;MAAA;IAAA,GASb;IAEDA,QAAQ,EAAE;EACZ,CAAC,EACC,EAAE,CAAC;EAGP,OACE,MAAC,GAAG,CAAC,SAAS;IAAA,WACZ,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,eAAe;MACpB,SAAS,EAAEJ,aAAc;MACzB,OAAO,EAAE;QACPU,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,SAAS;QACtBC,UAAU,EAAE;UAAA,IAAGC,IAAI,SAAJA,IAAI;UAAA,OACjB,KAAC,sBAAsB;YAAC,IAAI,EAAC,gBAAgB;YAAC,KAAK,EAAC,OAAO;YAAC,IAAI,EAAEA;UAAK,EAAG;QAAA;MAE9E,CAAE;MACF,aAAa,EAAE;QAAEC,MAAM,EAAEA;MAAO;IAAE,EAClC,EACF,KAAC,GAAG,CAAC,MAAM;MACT,IAAI,EAAC,aAAa;MAClB,SAAS,EAAEhB,WAAY;MACvB,OAAO,EAAE;QACPY,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,OAAO;QACpBC,UAAU,EAAE;UAAA,IAAGC,IAAI,SAAJA,IAAI;UAAA,OACjB,KAAC,sBAAsB;YAAC,IAAI,EAAC,MAAM;YAAC,KAAK,EAAC,OAAO;YAAC,IAAI,EAAEA;UAAK,EAAG;QAAA;MAEpE;IAAE,EACF,EACF,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,gBAAgB;MAAC,SAAS,EAAEd,aAAc;MACzD,OAAO,EAAE;QACPW,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,UAAU;QACvBC,UAAU,EAAE;UAAA,IAAGC,IAAI,SAAJA,IAAI;UAAA,OACjB,KAAC,sBAAsB;YAAC,IAAI,EAAC,UAAU;YAAC,KAAK,EAAC,OAAO;YAAC,IAAI,EAAEA;UAAK,EAAG;QAAA;MAExE;IAAE,EACF;EAAA,EACY;AAGpB;AACA,eAAeX,IAAI"},"metadata":{},"sourceType":"module"}