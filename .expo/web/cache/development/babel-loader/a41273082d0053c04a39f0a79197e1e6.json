{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { HeaderTitle } from '@react-navigation/elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Chats() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatMessages = _useState4[0],\n    setChatMessages = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chat_id = _useState6[0],\n    setChatId = _useState6[1];\n  function sendMessage() {\n    return _sendMessage.apply(this, arguments);\n  }\n  function _sendMessage() {\n    _sendMessage = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/message\", {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          },\n          body: JSON.stringify({\n            message: message\n          })\n        });\n        if (response.ok) {\n          var data = yield response.json();\n          setChatMessages(data);\n          setChatId(data[0].chat_id);\n          setMessage('');\n        } else {\n          throw new Error('Failed to send message');\n        }\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return _sendMessage.apply(this, arguments);\n  }\n  useEffect(function () {\n    setChatMessages([]);\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [chatMessages.map(function (chatMessage) {\n      return _jsx(Text, {\n        style: styles.message,\n        children: chatMessage.message\n      }, chatMessage.id);\n    }), _jsx(TextInput, {\n      value: message,\n      onChangeText: setMessage,\n      placeholder: \"Type your message\",\n      style: styles.input\n    }), _jsx(TouchableOpacity, {\n      onPress: sendMessage,\n      children: _jsx(Ionicons, {\n        name: \"send\",\n        size: 24,\n        color: \"white\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Ionicons, {\n        name: \"ios-backspace-sharp\",\n        size: 30,\n        color: \"black\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    alignItems: 'center'\n  },\n  input: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 20\n  },\n  headerTitle: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  message: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 10\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useEffect","useNavigation","HeaderBackButton","Ionicons","AsyncStorage","HeaderTitle","Chats","navigation","message","setMessage","chatMessages","setChatMessages","chat_id","setChatId","sendMessage","token","getItem","response","fetch","method","headers","body","JSON","stringify","ok","data","json","Error","error","Alert","alert","styles","container","map","chatMessage","id","input","button","goBack","StyleSheet","create","flex","backgroundColor","padding","alignItems","borderRadius","width","marginBottom","headerTitle","fontSize","color"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Alert,\n  TouchableOpacity,\n} from 'react-native'\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { HeaderTitle } from '@react-navigation/elements'\n\nfunction Chats() {\n  const navigation = useNavigation()\n  const [message, setMessage] = useState('')\n  const [chatMessages, setChatMessages] = useState([])\n  const [chat_id, setChatId] = useState(null)\n  async function sendMessage() {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const response = await fetch(\n        `http://localhost:3333/api/1.0.0/chat/${chat_id}/message`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n          body: JSON.stringify({ message }),\n        }\n      )\n      if (response.ok) {\n        const data = await response.json()\n        setChatMessages(data)\n        setChatId(data[0].chat_id)\n\n        // handle success\n        setMessage('')\n      } else {\n        throw new Error('Failed to send message')\n      }\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  useEffect(() => {\n    setChatMessages([])\n  }, [])\n\n  return (\n    <View style={styles.container}>\n      {chatMessages.map((chatMessage) => (\n        <Text key={chatMessage.id} style={styles.message}>\n          {chatMessage.message}\n        </Text>\n      ))}\n      <TextInput\n        value={message}\n        onChangeText={setMessage}\n        placeholder=\"Type your message\"\n        style={styles.input}\n      />\n      <TouchableOpacity onPress={sendMessage}>\n        <Ionicons name=\"send\" size={24} color=\"white\" />\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.goBack()}\n      >\n        <Ionicons name=\"ios-backspace-sharp\" size={30} color=\"black\" />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n    padding: 20,\n    alignItems: 'center',\n  },\n  input: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 10,\n    width: '100%',\n    marginBottom: 20,\n  },\n  headerTitle: {\n    fontSize: 20,\n    color: '#fff',\n  },\n  message: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n\n    padding: 10,\n    width: '100%',\n    marginBottom: 10,\n  },\n})\n\nexport default Chats\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}