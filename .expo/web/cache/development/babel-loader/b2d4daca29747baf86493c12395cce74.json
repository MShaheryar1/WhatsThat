{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChatsScreen(props) {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chatList = _useState2[0],\n    setChatList = _useState2[1];\n  var viewchat = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('@token');\n      fetch('http://localhost:3333/api/1.0.0/chat', {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data, 'data');\n        setChatList(function (oldArray) {\n          return [].concat(_toConsumableArray(oldArray), _toConsumableArray(data));\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    });\n    return function viewchat() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    viewchat();\n  }, []);\n  var Addchat = function Addchat() {\n    navigation.navigate('Addchat');\n  };\n  var Singlechat = function Singlechat() {\n    navigation.navigate('Singlechat');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: Addchat,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Create Chat\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: Singlechat,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Single Chat\"\n      })\n    }), _jsxs(View, {\n      style: styles.field,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"List of Chats\"\n      }), chatList.map(function (chat) {\n        return _jsxs(View, {\n          children: [_jsxs(Text, {\n            style: styles.chat,\n            children: [chat.id, \" \", chat.name]\n          }), _jsxs(Text, {\n            children: [chat.creator.user_id, \" \", chat.creator.first_name, ' ', chat.creator.last_name, \" \", chat.creator.email]\n          }), chat.members && _jsxs(View, {\n            children: [_jsx(Text, {\n              children: \"Members:\"\n            }), chat.members.map(function (member) {\n              return _jsxs(Text, {\n                children: [member.user_id, \" \", member.first_name, \" \", member.last_name, ' ', member.email]\n              }, member.user_id);\n            })]\n          }), _jsx(Text, {\n            children: chat.messages\n          })]\n        }, chat.id);\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 20,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  field: {\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n    padding: 30,\n    marginTop: 20,\n    width: '90%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  chat: {\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold',\n    marginBottom: 10\n  }\n});\nexport default ChatsScreen;","map":{"version":3,"names":["React","useState","useEffect","TouchableOpacity","useNavigation","AsyncStorage","ChatsScreen","props","navigation","chatList","setChatList","viewchat","token","getItem","fetch","method","headers","then","response","json","data","console","log","oldArray","catch","error","Addchat","navigate","Singlechat","styles","container","button","buttonText","field","title","map","chat","id","name","creator","user_id","first_name","last_name","email","members","member","messages","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderRadius","marginTop","color","borderWidth","borderColor","padding","width"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/chatsscreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { useNavigation } from '@react-navigation/native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction ChatsScreen(props) {\n  const navigation = useNavigation()\n\n  const [chatList, setChatList] = useState([])\n\n  const viewchat = async () => {\n    const token = await AsyncStorage.getItem('@token')\n\n    fetch('http://localhost:3333/api/1.0.0/chat', {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, 'data')\n        setChatList((oldArray) => [...oldArray, ...data])\n      })\n      .catch((error) => console.log(error))\n  }\n  useEffect(() => {\n    viewchat()\n  }, [])\n\n  const Addchat = () => {\n    navigation.navigate('Addchat')\n  }\n  const Singlechat = () => {\n    navigation.navigate('Singlechat')\n  }\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.button} onPress={Addchat}>\n        <Text style={styles.buttonText}>Create Chat</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={styles.button} onPress={Singlechat}>\n        <Text style={styles.buttonText}>Single Chat</Text>\n      </TouchableOpacity>\n\n      <View style={styles.field}>\n        <Text style={styles.title}>List of Chats</Text>\n        {chatList.map((chat) => (\n          <View key={chat.id}>\n            <Text style={styles.chat}>\n              {chat.id} {chat.name}\n            </Text>\n            <Text>\n              {chat.creator.user_id} {chat.creator.first_name}{' '}\n              {chat.creator.last_name} {chat.creator.email}\n            </Text>\n            {chat.members && (\n              <View>\n                <Text>Members:</Text>\n                {chat.members.map((member) => (\n                  <Text key={member.user_id}>\n                    {member.user_id} {member.first_name} {member.last_name}{' '}\n                    {member.email}\n                  </Text>\n                ))}\n              </View>\n            )}\n            <Text>{chat.messages}</Text>\n          </View>\n        ))}\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 20,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  field: {\n    borderWidth: 1,\n\n    borderColor: 'black',\n    borderRadius: 5,\n    padding: 30,\n    marginTop: 20,\n    width: '90%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  chat: {\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n})\n\nexport default ChatsScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}