{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport EditChat from \"./EditChat\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ChatsScreen(props) {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    chatList = _useState2[0],\n    setChatList = _useState2[1];\n  var viewchat = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('@token');\n      fetch('http://localhost:3333/api/1.0.0/chat', {\n        method: 'GET',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data, 'data');\n        setChatList(function (oldArray) {\n          return [].concat(_toConsumableArray(oldArray), _toConsumableArray(data));\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    });\n    return function viewchat() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    viewchat();\n  }, []);\n  var Addchat = function Addchat() {\n    navigation.navigate('Addchat');\n  };\n  var Singlechat = function Singlechat() {\n    navigation.navigate('Singlechat');\n  };\n  var EditChat = function EditChat() {\n    navigation.navigate('EditChat');\n  };\n  var Chats = function Chats(chat_id) {\n    navigation.navigate('Chats', {\n      chat_id: chat_id\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: Addchat,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Create Chat\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: Singlechat,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"View Single Chat\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: EditChat,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Edit Chat\"\n        })\n      }), _jsxs(View, {\n        style: styles.field,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"List of Chats\"\n        }), chatList.map(function (chat) {\n          return _jsxs(TouchableOpacity, {\n            style: styles.chatContainer,\n            onPress: function onPress() {\n              console.log(chat.chat_id, 'saath comment');\n              return Chats(chat.chat_id);\n            },\n            children: [_jsx(Text, {\n              style: styles.chatName,\n              children: chat.name\n            }), _jsxs(Text, {\n              style: styles.chatCreator,\n              children: [\"Created by \", chat.creator.first_name, \" \", chat.creator.last_name]\n            }), _jsxs(Text, {\n              style: styles.chatInfo,\n              children: [chat.creator.email, \" (\", chat.creator.user_id, \")\"]\n            }), _jsx(Text, {\n              style: styles.chatMessages,\n              children: chat.messages\n            })]\n          }, chat.chat_id);\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 50,\n    marginBottom: 20,\n    color: 'white'\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    marginBottom: 20\n  },\n  buttonText: {\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  field: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 10,\n    marginBottom: 20,\n    width: '90%'\n  },\n  chatContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    padding: 10,\n    marginBottom: 20,\n    width: '100%'\n  },\n  chatName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    color: '#333'\n  },\n  chatCreator: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 3\n  },\n  chatInfo: {\n    fontSize: 12,\n    color: '#999'\n  },\n  chatMessages: {\n    fontSize: 14,\n    color: '#333',\n    marginTop: 5\n  }\n});\nexport default ChatsScreen;","map":{"version":3,"names":["React","useState","useEffect","TouchableOpacity","useNavigation","AsyncStorage","EditChat","ChatsScreen","props","navigation","chatList","setChatList","viewchat","token","getItem","fetch","method","headers","then","response","json","data","console","log","oldArray","catch","error","Addchat","navigate","Singlechat","Chats","chat_id","styles","container","scrollContainer","button","buttonText","field","title","map","chat","chatContainer","chatName","name","chatCreator","creator","first_name","last_name","chatInfo","email","user_id","chatMessages","messages","StyleSheet","create","flexGrow","justifyContent","alignItems","backgroundColor","flex","fontSize","fontWeight","marginTop","marginBottom","color","paddingVertical","paddingHorizontal","borderRadius","padding","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/chatsscreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, ScrollView } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { useNavigation } from '@react-navigation/native'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport EditChat from './EditChat'\n\nfunction ChatsScreen(props) {\n  const navigation = useNavigation()\n\n  const [chatList, setChatList] = useState([])\n\n  const viewchat = async () => {\n    const token = await AsyncStorage.getItem('@token')\n\n    fetch('http://localhost:3333/api/1.0.0/chat', {\n      method: 'GET',\n      headers: {\n        'X-Authorization': token,\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data, 'data')\n        setChatList((oldArray) => [...oldArray, ...data])\n      })\n      .catch((error) => console.log(error))\n  }\n  useEffect(() => {\n    viewchat()\n  }, [])\n\n  const Addchat = () => {\n    navigation.navigate('Addchat')\n  }\n  const Singlechat = () => {\n    navigation.navigate('Singlechat')\n  }\n  const EditChat = () => {\n    navigation.navigate('EditChat')\n  }\n  const Chats = (chat_id) => {\n    navigation.navigate('Chats', { chat_id: chat_id })\n  }\n\n  return (\n    <View style={styles.container}>\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <TouchableOpacity style={styles.button} onPress={Addchat}>\n          <Text style={styles.buttonText}>Create Chat</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={Singlechat}>\n          <Text style={styles.buttonText}>View Single Chat</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={EditChat}>\n          <Text style={styles.buttonText}>Edit Chat</Text>\n        </TouchableOpacity>\n\n        <View style={styles.field}>\n          <Text style={styles.title}>List of Chats</Text>\n          {chatList.map((chat) => (\n            <TouchableOpacity\n              key={chat.chat_id}\n              style={styles.chatContainer}\n              onPress={() => {\n                console.log(chat.chat_id, 'saath comment')\n                return Chats(chat.chat_id)\n              }}\n            >\n              <Text style={styles.chatName}>{chat.name}</Text>\n              <Text style={styles.chatCreator}>\n                Created by {chat.creator.first_name} {chat.creator.last_name}\n              </Text>\n              <Text style={styles.chatInfo}>\n                {chat.creator.email} ({chat.creator.user_id})\n              </Text>\n              <Text style={styles.chatMessages}>{chat.messages}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  scrollContainer: {\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 50,\n    marginBottom: 20,\n    color: 'white',\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    marginBottom: 20,\n  },\n  buttonText: {\n    color: 'green',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  field: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    padding: 10,\n    marginBottom: 20,\n    width: '90%',\n  },\n  chatContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n\n    elevation: 5,\n    padding: 10,\n    marginBottom: 20,\n    width: '100%',\n  },\n  chatName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    color: '#333',\n  },\n  chatCreator: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 3,\n  },\n  chatInfo: {\n    fontSize: 12,\n    color: '#999',\n  },\n  chatMessages: {\n    fontSize: 14,\n    color: '#333',\n    marginTop: 5,\n  },\n})\n\nexport default ChatsScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}