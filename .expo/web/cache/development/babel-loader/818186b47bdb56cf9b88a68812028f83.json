{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Login from \"./Login\";\nimport ContactScreen from \"./contact\";\nimport MessageScreen from \"./message\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Chats(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  useEffect(function () {\n    var getToken = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var value = yield AsyncStorage.getItem('@token');\n          if (value !== null) {\n            setToken(value);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      });\n      return function getToken() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    getToken();\n  }, []);\n  var handleLogout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/logout', {\n          method: 'POST',\n          headers: {\n            'X-Authorization': _token,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          yield AsyncStorage.removeItem('@token');\n          setToken(null);\n          navigation.navigate('Home');\n        } else {\n          console.log('Logout failed');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    return function handleLogout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  if (!token) {\n    return _jsx(Login, {\n      setToken: setToken\n    });\n  }\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref4) {\n      var route = _ref4.route;\n      return {};\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"ProfileScreen\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Profile',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color,\n            size = _ref5.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"account-circle\",\n            color: color,\n            size: size\n          });\n        }\n      },\n      initialParams: {\n        handleLogout: handleLogout\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ChatsScreen\",\n      component: ChatsScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'Chats',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color,\n            size = _ref6.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"chat\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"ContactsScreen\",\n      component: ContactScreen,\n      options: {\n        headerShown: false,\n        tabBarLabel: 'contacts',\n        tabBarIcon: function tabBarIcon(_ref7) {\n          var color = _ref7.color,\n            size = _ref7.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"contacts\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: '#1c1c1e',\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useEffect","AsyncStorage","MaterialCommunityIcons","createBottomTabNavigator","Login","ContactScreen","MessageScreen","Chats","navigation","token","setToken","getToken","value","getItem","error","console","log","handleLogout","response","fetch","method","headers","ok","removeItem","navigate","route","ProfileScreen","headerShown","tabBarLabel","tabBarIcon","color","size","ChatsScreen","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","title","fontSize","fontWeight","marginBottom","button","padding","borderRadius","buttonText"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { MaterialCommunityIcons } from 'react-native-vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Login from './Login';\nimport ContactScreen from './contact';\nimport MessageScreen from './message';\n\n\n// The functions below check if the user has logged in using token, if the token\n//is found, it is set using settoken function otherwise null\n//if the token state is null, login is rendered passing settoken function.\n//if token state is not null, user has logged in, chat component is rendered\nfunction Chats({ navigation }) {\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    // Check if user has a token stored in async storage\n    const getToken = async () => {\n      try {\n        const value = await AsyncStorage.getItem('@token');\n        if (value !== null) {\n          setToken(value);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getToken();\n  }, []);\n\n  const handleLogout = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token');\n  \n      const response = await fetch('http://localhost:3333/api/1.0.0/logout', {\n        method: 'POST',\n        headers: {\n          'X-Authorization': token,\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      if (response.ok) {\n        // Logout was successful, remove token from async storage\n        await AsyncStorage.removeItem('@token');\n        setToken(null);\n        navigation.navigate('Home');\n      } else {\n        // Logout failed, log error message\n        console.log('Logout failed');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  \n\n  if (!token) {\n    // Render Login component if user has not logged in yet\n    return <Login setToken={setToken} />;\n  }\n\n  // Render Chats component if user has logged in\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n      })}\n    >\n\n\n<Tab.Screen name=\"ProfileScreen\" component={ProfileScreen}\n        options={{headerShown:false,\n          tabBarLabel: 'Profile',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"account-circle\" color={color} size={size} />\n          ),\n        }}\n        initialParams={{ handleLogout: handleLogout }}\n        \n      />\n      <Tab.Screen name=\"ChatsScreen\" component={ChatsScreen}\n        options={{headerShown:false,\n          tabBarLabel: 'Chats',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"chat\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Tab.Screen name=\"ContactsScreen\" component={ContactScreen}\n        options={{ headerShown:false,\n          tabBarLabel: 'contacts',\n          tabBarIcon: ({ color, size }) => (\n            <MaterialCommunityIcons name=\"contacts\" color={color} size={size} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: '#1c1c1e',\n    padding: 10,\n    borderRadius: 5,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n  },\n});\n\nexport default Chats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}