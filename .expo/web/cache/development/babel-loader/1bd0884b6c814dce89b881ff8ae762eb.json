{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Chats(props) {\n  var _this = this;\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chatMessages = _useState4[0],\n    setChatMessages = _useState4[1];\n  var fetchMessages = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        console.log(chat_id.chat_id);\n        var response = yield fetch('http://localhost:3333/api/1.0.0/chat/' + _this.props.route.params.chat_id + '/message', {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          }\n        });\n        var data = yield response.json();\n        setChatMessages(data);\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return function fetchMessages() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var sendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      console.log(message, 'this is message');\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        var response = yield fetch('http://localhost:3333/api/1.0.0/chat/' + _this.props.route.params.chat_id + '/message', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          },\n          body: JSON.stringify({\n            message: message\n          })\n        });\n        var data = response.status;\n        console.log(data, 'this is data');\n        if (response.ok) {\n          setChatMessages([].concat(_toConsumableArray(chatMessages), [{\n            message: message\n          }]));\n          setMessage('');\n        } else {\n          throw new Error('Failed to send message');\n        }\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      }\n    });\n    return function sendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var renderChatMessage = function renderChatMessage(_ref3) {\n    var item = _ref3.item;\n    return _jsx(View, {\n      style: styles.message,\n      children: _jsx(Text, {\n        children: item.message\n      })\n    });\n  };\n  var AddMember = function AddMember(chat_id) {\n    navigation.navigate('AddMember', {\n      chat_id: chat_id\n    });\n  };\n  var DeleteUser = function DeleteUser(chat_id) {\n    navigation.navigate('DeleteUser', {\n      chat_id: chat_id\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: chatMessages,\n      renderItem: renderChatMessage,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      style: styles.messagesList\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        value: message,\n        onChangeText: setMessage,\n        placeholder: \"Type your message\",\n        style: styles.input\n      }), _jsx(TouchableOpacity, {\n        onPress: sendMessage,\n        children: _jsx(Ionicons, {\n          name: \"send\",\n          size: 24,\n          color: \"yellow\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return AddMember(chat_id.chat_id);\n        },\n        children: _jsx(Text, {\n          children: \"Add a User\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return DeleteUser(chat_id.chat_id);\n        },\n        children: _jsx(Text, {\n          children: \"Delete a User\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.backButton,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Ionicons, {\n        name: \"ios-arrow-back\",\n        size: 24,\n        color: \"#000000\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E5E5E5',\n    padding: 20,\n    justifyContent: 'flex-end',\n    marginTop: 40\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    flex: 1,\n    marginRight: 10\n  },\n  button: {\n    backgroundColor: '#F9BF3B',\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  messagesList: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 20\n  },\n  message: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  },\n  backButton: {\n    position: 'absolute',\n    top: 0,\n    left: 20,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 50,\n    width: 40,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  backButtonText: {\n    fontSize: 20,\n    color: '#000000',\n    fontWeight: 'bold'\n  }\n});\nexport default Chats;","map":{"version":3,"names":["React","useState","useEffect","useNavigation","Ionicons","AsyncStorage","Chats","props","navigation","message","setMessage","chatMessages","setChatMessages","fetchMessages","token","getItem","console","log","chat_id","response","fetch","route","params","headers","data","json","error","Alert","alert","sendMessage","method","body","JSON","stringify","status","ok","Error","renderChatMessage","item","styles","AddMember","navigate","DeleteUser","container","index","toString","messagesList","inputContainer","input","button","backButton","goBack","StyleSheet","create","flex","backgroundColor","padding","justifyContent","marginTop","flexDirection","alignItems","marginBottom","borderRadius","marginRight","paddingVertical","paddingHorizontal","buttonText","color","fontWeight","fontSize","width","position","top","left","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","backButtonText"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/Chats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Alert,\n  TouchableOpacity,\n  FlatList,\n} from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction Chats(props) {\n  const navigation = useNavigation()\n  const [message, setMessage] = useState('')\n  const [chatMessages, setChatMessages] = useState([])\n  // const [chat_id, setChatId] = useState({})\n\n  // useEffect(() => {\n  //   setChatId(props.route.params)\n  //   fetchMessages()\n  // }, [])\n\n  const fetchMessages = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      console.log(chat_id.chat_id)\n      const response = await fetch(\n        'http://localhost:3333/api/1.0.0/chat/' +\n          this.props.route.params.chat_id +\n          '/message',\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n        }\n      )\n      const data = await response.json()\n      setChatMessages(data)\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  const sendMessage = async () => {\n    console.log(message, 'this is message')\n    try {\n      const token = await AsyncStorage.getItem('@token')\n      const response = await fetch(\n        'http://localhost:3333/api/1.0.0/chat/' +\n          this.props.route.params.chat_id +\n          '/message',\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n          body: JSON.stringify({ message: message }),\n        }\n      )\n      const data = response.status\n\n      console.log(data, 'this is data')\n\n      if (response.ok) {\n        setChatMessages([...chatMessages, { message: message }])\n        // reset message input field\n        setMessage('')\n      } else {\n        throw new Error('Failed to send message')\n      }\n    } catch (error) {\n      Alert.alert('Error', error.message)\n    }\n  }\n\n  const renderChatMessage = ({ item }) => (\n    <View style={styles.message}>\n      <Text>{item.message}</Text>\n    </View>\n  )\n  const AddMember = (chat_id) => {\n    navigation.navigate('AddMember', { chat_id: chat_id })\n  }\n  const DeleteUser = (chat_id) => {\n    navigation.navigate('DeleteUser', { chat_id: chat_id })\n  }\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={chatMessages}\n        renderItem={renderChatMessage}\n        keyExtractor={(item, index) => index.toString()}\n        style={styles.messagesList}\n      />\n      <View style={styles.inputContainer}>\n        <TextInput\n          value={message}\n          onChangeText={setMessage}\n          placeholder=\"Type your message\"\n          style={styles.input}\n        />\n        <TouchableOpacity onPress={sendMessage}>\n          <Ionicons name=\"send\" size={24} color=\"yellow\" />\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => AddMember(chat_id.chat_id)}\n        >\n          <Text>Add a User</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => DeleteUser(chat_id.chat_id)}\n        >\n          <Text>Delete a User</Text>\n        </TouchableOpacity>\n      </View>\n      <TouchableOpacity\n        style={styles.backButton}\n        onPress={() => navigation.goBack()}\n      >\n        <Ionicons name=\"ios-arrow-back\" size={24} color=\"#000000\" />\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E5E5E5',\n    padding: 20,\n    justifyContent: 'flex-end',\n    marginTop: 40,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    flex: 1,\n    marginRight: 10,\n  },\n  button: {\n    backgroundColor: '#F9BF3B',\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  messagesList: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 20,\n  },\n  message: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  },\n  backButton: {\n    position: 'absolute',\n    top: 0,\n    left: 20,\n    backgroundColor: '#FFFFFF',\n    borderRadius: 50,\n    width: 40,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  backButtonText: {\n    fontSize: 20,\n    color: '#000000',\n    fontWeight: 'bold',\n  },\n})\n\nexport default Chats\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}