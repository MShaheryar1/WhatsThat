{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useState } from \"react-native-web/dist/index\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _useState = useState(name),\n  _useState2 = _slicedToArray(_useState, 2),\n  name = _useState2[0],\n  setName = _useState2[1];\nfunction addchat() {\n  return _addchat.apply(this, arguments);\n}\nfunction _addchat() {\n  _addchat = _asyncToGenerator(function* () {\n    try {\n      var token = yield AsyncStorage.getItem('@token');\n      var id = yield AsyncStorage.getItem('@id');\n      var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat\", {\n        method: 'POST',\n        headers: {\n          \"X-Authorization\": token,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      var data = yield response.json();\n      console.log(data, \" this is data\");\n      setUser(data);\n      yield AsyncStorage.setItem('user', data);\n    } catch (error) {\n      console.error(error);\n    }\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Add chat\"\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Name:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        defaultValue: name,\n        placeholder: name,\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return setName(text);\n        }\n      })]\n    });\n  });\n  return _addchat.apply(this, arguments);\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  }\n});\nexport default addchat;","map":{"version":3,"names":["React","useState","TouchableOpacity","useNavigation","AsyncStorage","name","setName","addchat","token","getItem","id","response","fetch","method","headers","data","json","console","log","setUser","setItem","error","styles","container","title","label","input","text","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/addchat.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet,useState } from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nconst [name, setName] = useState(name);\n\nasync function addchat() {\n   \n        try {\n          const token = await AsyncStorage.getItem('@token');\n          const id = await AsyncStorage.getItem('@id');\n  \n          const response = await fetch(`http://localhost:3333/api/1.0.0/chat`, {\n              method:'POST',\n            headers: {\n              \"X-Authorization\":  token,\n              \"Content-Type\": \"application/json\",\n            }\n  \n          });\n          const data = await response.json();\n          console.log(data, \" this is data\")\n          setUser(data);\n          await AsyncStorage.setItem('user', data);\n        } catch (error) {\n          console.error(error);\n        }\n    \n    \n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Add chat</Text>\n      <Text style={styles.label}>Name:</Text>\n            <TextInput\n                style={styles.input}\n                defaultValue={name}\n                placeholder={name}\n                value={name}\n                onChangeText={(text) => setName(text)}\n            />\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n});\n\nexport default addchat;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA,SACMC,QAAQ;AACxC,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AAAC;AAAA;AAGrE,gBAAwBH,QAAQ,CAACI,IAAI,CAAC;EAAA;EAA/BA,IAAI;EAAEC,OAAO;AAAmB,SAExBC,OAAO;EAAA;AAAA;AAAA;EAAA,6BAAtB,aAAyB;IAEjB,IAAI;MACF,IAAMC,KAAK,SAASJ,YAAY,CAACK,OAAO,CAAC,QAAQ,CAAC;MAClD,IAAMC,EAAE,SAASN,YAAY,CAACK,OAAO,CAAC,KAAK,CAAC;MAE5C,IAAME,QAAQ,SAASC,KAAK,yCAAyC;QACjEC,MAAM,EAAC,MAAM;QACfC,OAAO,EAAE;UACP,iBAAiB,EAAGN,KAAK;UACzB,cAAc,EAAE;QAClB;MAEF,CAAC,CAAC;MACF,IAAMO,IAAI,SAASJ,QAAQ,CAACK,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,EAAE,eAAe,CAAC;MAClCI,OAAO,CAACJ,IAAI,CAAC;MACb,MAAMX,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEL,IAAI,CAAC;IAC1C,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;IACtB;IAGN,OACE,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAA,WAC5B,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,KAAM;QAAA,UAAC;MAAQ,EAAO,EAC1C,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,KAAM;QAAA,UAAC;MAAK,EAAO,EACjC,KAAC,SAAS;QACN,KAAK,EAAEH,MAAM,CAACI,KAAM;QACpB,YAAY,EAAErB,IAAK;QACnB,WAAW,EAAEA,IAAK;QAClB,KAAK,EAAEA,IAAK;QACZ,YAAY,EAAE,sBAACsB,IAAI;UAAA,OAAKrB,OAAO,CAACqB,IAAI,CAAC;QAAA;MAAC,EACxC;IAAA,EACH;EAEX,CAAC;EAAA;AAAA;AAGD,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDT,KAAK,EAAE;IACLU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAe7B,OAAO"},"metadata":{},"sourceType":"module"}