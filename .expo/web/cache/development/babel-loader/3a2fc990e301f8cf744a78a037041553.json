{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction AddMember(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    user_id = _useState2[0],\n    setUserId = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    chat_id = _useState4[0],\n    setChatId = _useState4[1];\n  useEffect(function () {\n    var _props$route, _props$route$params;\n    var chatId = props == null ? void 0 : (_props$route = props.route) == null ? void 0 : (_props$route$params = _props$route.params) == null ? void 0 : _props$route$params.chat_id;\n    if (chatId) {\n      console.log(chatId, 'chatId');\n      setChatId(chatId);\n    }\n  }, [props]);\n  var navigation = useNavigation();\n  var Add = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var token = yield AsyncStorage.getItem('@token');\n        if (!user_id) {\n          console.log('User ID is empty');\n          return;\n        }\n        var response = yield fetch(\"http://localhost:3333/api/1.0.0/chat/\" + chat_id + \"/user/\" + user_id, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token\n          },\n          body: JSON.stringify({\n            user_id: user_id\n          })\n        });\n        var data = response.status;\n        console.log(data, 'this is data');\n        if (response.ok) {\n          setUserId('');\n          navigation.goBack();\n        } else {\n          throw new Error('Failed to add user');\n        }\n      } catch (error) {\n        'Error', error.message;\n      }\n    });\n    return function Add() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputView,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Enter ID \"\n      }), _jsx(TextInput, {\n        style: styles.TextInput,\n        placeholder: \"Enter ID\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(user_id) {\n          return setUserId(user_id);\n        }\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: Add,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Add\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      children: _jsx(Ionicons, {\n        name: \"ios-backspace-sharp\",\n        size: 30,\n        color: \"black\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default AddMember;","map":{"version":3,"names":["React","useState","useEffect","useNavigation","HeaderBackButton","Ionicons","AsyncStorage","AddMember","props","user_id","setUserId","chat_id","setChatId","chatId","route","params","console","log","navigation","Add","token","getItem","response","fetch","method","headers","body","JSON","stringify","data","status","ok","goBack","Error","error","message","styles","container","inputView","title","TextInput","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","paddingVertical","paddingHorizontal","borderRadius","marginTop","color"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/AddMember.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigation, HeaderBackButton } from '@react-navigation/native'\nimport { Ionicons } from '@expo/vector-icons'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from 'react-native'\n\nfunction AddMember(props) {\n  const [user_id, setUserId] = useState('')\n  const [chat_id, setChatId] = useState(null)\n\n  useEffect(() => {\n    const chatId = props?.route?.params?.chat_id\n    if (chatId) {\n      console.log(chatId, 'chatId')\n      setChatId(chatId)\n    }\n  }, [props])\n\n  const navigation = useNavigation()\n\n  const Add = async () => {\n    try {\n      const token = await AsyncStorage.getItem('@token')\n\n      if (!user_id) {\n        console.log('User ID is empty')\n        return\n      }\n\n      const response = await fetch(\n        `http://localhost:3333/api/1.0.0/chat/${chat_id}/user/${user_id}`,\n        {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-Authorization': token,\n          },\n          body: JSON.stringify({ user_id }),\n        }\n      )\n\n      const data = response.status\n\n      console.log(data, 'this is data')\n\n      if (response.ok) {\n        // reset user_id input field\n        setUserId('')\n        navigation.goBack()\n      } else {\n        throw new Error('Failed to add user')\n      }\n    } catch (error) {\n      'Error', error.message\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputView}>\n        <Text style={styles.title}>Enter ID </Text>\n        <TextInput\n          style={styles.TextInput}\n          placeholder=\"Enter ID\"\n          placeholderTextColor=\"#003f5c\"\n          onChangeText={(user_id) => setUserId(user_id)}\n        />\n      </View>\n      <TouchableOpacity style={styles.button} onPress={Add}>\n        <Text style={styles.buttonText}>Add</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.goBack()}\n      >\n        <Ionicons name=\"ios-backspace-sharp\" size={30} color=\"black\" />\n      </TouchableOpacity>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 100,\n    marginTop: 50,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default AddMember\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}