{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport { useEffect, useRef } from 'react';\nimport { startMapper, stopMapper, makeRemote } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport NativeReanimatedModule from \"../NativeReanimated\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, isAnimated, shallowEqual, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, makeViewsRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\nfunction prepareAnimation(frameTimestamp, animatedProp, lastAnimation, lastValue) {\n  'worklet';\n\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    var animation = animatedProp;\n    var value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n  'worklet';\n\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    var allFinished = true;\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    var finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    var _allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n        _allFinished = false;\n      }\n    });\n    return _allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n  'worklet';\n\n  var _state$animations, _updater;\n  var animations = (_state$animations = state.animations) != null ? _state$animations : {};\n  var newValues = (_updater = updater()) != null ? _updater : {};\n  var oldValues = state.last;\n  var nonAnimatedNewValues = {};\n  var hasAnimations = false;\n  var frameTimestamp;\n  var hasNonAnimatedValues = false;\n  for (var key in newValues) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n  if (hasAnimations) {\n    var frame = function frame(timestamp) {\n      var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n      var updates = {};\n      var allFinished = true;\n      for (var propName in animations) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n  }\n  state.last = newValues;\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle) {\n  'worklet';\n\n  var _state$animations2, _updater2;\n  var adapters = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n  var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};\n  var newValues = (_updater2 = updater()) != null ? _updater2 : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n  var frameTimestamp;\n  Object.keys(animations).forEach(function (key) {\n    var value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n  function frame(timestamp) {\n    var animations = state.animations,\n      last = state.last,\n      isAnimationCancelled = state.isAnimationCancelled;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n    var updates = {};\n    var allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n    }\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n  state.last = newValues;\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(viewDescriptors, newValues, maybeViewRef, animatedStyle, adapters);\n  }\n}\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    for (var key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop.value !== undefined) {\n    throw new Error(\"invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _updater$_closure;\n  var viewsRef = makeViewsRefSet();\n  var initRef = useRef();\n  var inputs = Object.values((_updater$_closure = updater._closure) != null ? _updater$_closure : {});\n  if (shouldBeUseWeb()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(\"useAnimatedStyle was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\\n\\nFor more, see the docs: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/web-support#web-without-a-babel-plugin\");\n    }\n  }\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var animationsActive = useSharedValue(true);\n  var animatedStyle = useRef({});\n  if (!dependencies) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n  if (!initRef.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeRemote({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false\n      }),\n      viewDescriptors: makeViewDescriptorsSet()\n    };\n  }\n  var _initRef$current = initRef.current,\n    initial = _initRef$current.initial,\n    remoteState = _initRef$current.remoteState,\n    viewDescriptors = _initRef$current.viewDescriptors;\n  var sharableViewDescriptors = viewDescriptors.sharableViewDescriptors;\n  var maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n  dependencies.push(sharableViewDescriptors);\n  useEffect(function () {\n    var fun;\n    var updaterFn = updater;\n    if (adapters) {\n      updaterFn = function updaterFn() {\n        'worklet';\n\n        var newValues = updater();\n        adaptersArray.forEach(function (adapter) {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n    if (isJest()) {\n      fun = function fun() {\n        'worklet';\n\n        jestStyleUpdater(sharableViewDescriptors, updater, remoteState, maybeViewRef, animationsActive, animatedStyle, adaptersArray);\n      };\n    } else {\n      fun = function fun() {\n        'worklet';\n\n        styleUpdater(sharableViewDescriptors, updaterFn, remoteState, maybeViewRef, animationsActive);\n      };\n    }\n    var mapperId = startMapper(fun, inputs);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    animationsActive.value = true;\n    return function () {\n      animationsActive.value = false;\n    };\n  }, []);\n  checkSharedValueUsage(initial.value);\n  if (process.env.JEST_WORKER_ID) {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      animatedStyle: animatedStyle\n    };\n  } else {\n    return {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef\n    };\n  }\n}","map":{"version":3,"mappings":"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","names":["useEffect","useRef","startMapper","stopMapper","makeRemote","updateProps","updatePropsJestWrapper","initialUpdaterRun","NativeReanimatedModule","useSharedValue","buildWorkletsHash","isAnimated","shallowEqual","validateAnimatedStyles","makeViewDescriptorsSet","makeViewsRefSet","isJest","shouldBeUseWeb","prepareAnimation","frameTimestamp","animatedProp","lastAnimation","lastValue","Array","isArray","forEach","prop","index","onFrame","animation","value","current","undefined","callStart","timestamp","onStart","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","animations","newValues","oldValues","last","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","global","__frameTimestamp","performance","now","frame","isAnimationCancelled","isAnimationRunning","updates","propName","requestAnimationFrame","jestStyleUpdater","animatedStyle","adapters","length","checkSharedValueUsage","currentKey","element","Error","useAnimatedStyle","dependencies","viewsRef","initRef","inputs","values","_closure","_dependencies","__DEV__","__workletHash","adaptersArray","adaptersHash","push","initialStyle","initial","remoteState","sharableViewDescriptors","native","fun","updaterFn","adapter","mapperId","process","env","JEST_WORKER_ID"],"sources":["useAnimatedStyle.ts"],"sourcesContent":["import { MutableRefObject, useEffect, useRef } from 'react';\n\nimport { startMapper, stopMapper, makeRemote } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport NativeReanimatedModule from '../NativeReanimated';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\nimport { DependencyList, Descriptor } from './commonTypes';\nimport {\n  makeViewDescriptorsSet,\n  makeViewsRefSet,\n  ViewDescriptorsSet,\n  ViewRefSet,\n} from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport {\n  AnimationObject,\n  Timestamp,\n  AdapterWorkletFunction,\n  AnimatedStyle,\n  BasicWorkletFunction,\n  BasicWorkletFunctionOptional,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n} from '../commonTypes';\nexport interface AnimatedStyleResult {\n  viewDescriptors: ViewDescriptorsSet;\n  initial: AnimatedStyle;\n  viewsRef: ViewRefSet<any>;\n  animatedStyle?: MutableRefObject<AnimatedStyle>;\n}\n\ninterface AnimatedState {\n  last: AnimatedStyle;\n  animations: AnimatedStyle;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimationRef {\n  initial: {\n    value: AnimatedStyle;\n    updater: () => AnimatedStyle;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle,\n  lastAnimation: AnimatedStyle,\n  lastValue: AnimatedStyle\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle,\n  animationsActive: SharedValue<boolean>\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(entry, timestamp, index, result[key], animationsActive)\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true /* finished */);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: BasicWorkletFunction<AnimatedStyle>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: BasicWorkletFunction<AnimatedStyle>,\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  animatedStyle: MutableRefObject<AnimatedStyle>,\n  adapters: AdapterWorkletFunction[] = []\n): void {\n  'worklet';\n  const animations: AnimatedStyle = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || performance.now();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(\n        viewDescriptors,\n        updates,\n        maybeViewRef,\n        animatedStyle,\n        adapters\n      );\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(\n      viewDescriptors,\n      newValues,\n      maybeViewRef,\n      animatedStyle,\n      adapters\n    );\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop.value === undefined) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed insted of its value, throw an error\n    throw new Error(\n      `invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\nexport function useAnimatedStyle<T extends AnimatedStyle>(\n  updater: BasicWorkletFunction<T>,\n  dependencies?: DependencyList,\n  adapters?: AdapterWorkletFunction | AdapterWorkletFunction[]\n): AnimatedStyleResult {\n  const viewsRef: ViewRefSet<any> = makeViewsRefSet();\n  const initRef = useRef<AnimationRef>();\n  let inputs = Object.values(updater._closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !updater.__workletHash) {\n      throw new Error(\n        `useAnimatedStyle was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel/SWC plugin.\n\nFor more, see the docs: https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/web-support#web-without-a-babel-plugin`\n      );\n    }\n  }\n  const adaptersArray: AdapterWorkletFunction[] = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const animationsActive = useSharedValue<boolean>(true);\n  const animatedStyle: MutableRefObject<AnimatedStyle> = useRef<AnimatedStyle>(\n    {}\n  );\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!initRef.current) {\n    const initialStyle: AnimatedStyle = initialUpdaterRun(updater);\n    validateAnimatedStyles(initialStyle);\n    initRef.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater,\n      },\n      remoteState: makeRemote<AnimatedState>({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n    };\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const { initial, remoteState, viewDescriptors } = initRef.current!;\n  const sharableViewDescriptors = viewDescriptors.sharableViewDescriptors;\n  const maybeViewRef = NativeReanimatedModule.native ? undefined : viewsRef;\n\n  dependencies.push(sharableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater as BasicWorkletFunctionOptional<T>;\n    if (adapters) {\n      updaterFn = () => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n\n    if (isJest()) {\n      fun = () => {\n        'worklet';\n        jestStyleUpdater(\n          sharableViewDescriptors,\n          updater,\n          remoteState,\n          maybeViewRef,\n          animationsActive,\n          animatedStyle,\n          adaptersArray\n        );\n      };\n    } else {\n      fun = () => {\n        'worklet';\n        styleUpdater(\n          sharableViewDescriptors,\n          updaterFn,\n          remoteState,\n          maybeViewRef,\n          animationsActive\n        );\n      };\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    animationsActive.value = true;\n    return () => {\n      animationsActive.value = false;\n    };\n  }, []);\n\n  checkSharedValueUsage(initial.value);\n\n  if (process.env.JEST_WORKER_ID) {\n    return { viewDescriptors, initial: initial, viewsRef, animatedStyle };\n  } else {\n    return { viewDescriptors, initial: initial, viewsRef };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}