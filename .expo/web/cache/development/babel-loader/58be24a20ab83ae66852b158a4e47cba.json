{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nfunction singlechat() {\n  var _useState = useState(singlechat),\n    _useState2 = _slicedToArray(_useState, 2),\n    singlechat = _useState2[0],\n    setSingleChat = _useState2[1];\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white'\n  },\n  error: {\n    fontSize: 16,\n    color: 'red'\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green'\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nexport default singlechat;","map":{"version":3,"names":["React","useState","useEffect","TextInput","AsyncStorage","singlechat","setSingleChat","styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","title","fontSize","fontWeight","marginBottom","label","marginTop","alignSelf","marginLeft","input","borderWidth","borderColor","borderRadius","padding","margin","width","color","error","button","paddingVertical","paddingHorizontal","buttonText"],"sources":["/Users/shaheryar/Downloads/WhatsThat/src/singlechat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { TextInput } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nfunction singlechat() {\n  const [singlechat, setSingleChat] = useState(singlechat)\n\n  //   useEffect(() => {\n  //     const fsinglechat = async () => {\n  //       const id = await AsyncStorage.getItem('@id')\n  //       const token = await AsyncStorage.getItem('@token')\n\n  //       const response = await fetch(\n  //         'http://localhost:3333/api/1.0.0/chat/' + id,\n  //         {\n  //           method: 'GET',\n  //           headers: {\n  //             'X-Authorization': token,\n  //             'content-type': Text / plain,\n  //           },\n  //         }\n  //       )\n  //     }\n  //   })\n  //   return (\n  //     <View style={styles.container}>\n  //       <img\n  //         style={{\n  //           width: 100,\n  //           height: 100,\n  //           display: 'flex',\n  //           marginLeft: 30,\n  //           marginBottom: 30,\n  //         }}\n  //         src={imageSrc}\n  //       ></img>\n  //       <Text style={styles.title}>Single Chat Details</Text>\n  //       <TextInput\n  //         style={styles.input}\n  //         defaultValue={singlechat}\n  //         placeholder={singlechat}\n  //         value={singlechat}\n  //         onChangeText={(text) => setSingleChat(text)}\n  //       />\n  //       <TouchableOpacity style={styles.button} onPress={fsinglechat}>\n  //         <Text style={styles.buttonText}>Get chat</Text>\n  //       </TouchableOpacity>\n  //     </View>\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#808000',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: 10,\n    alignSelf: 'flex-start',\n    marginLeft: 20,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    padding: 10,\n    margin: 10,\n    width: 250,\n    fontSize: 16,\n    color: 'white',\n  },\n  error: {\n    fontSize: 16,\n    color: 'red',\n  },\n  button: {\n    backgroundColor: 'white',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    marginTop: 20,\n    color: 'green',\n  },\n  buttonText: {\n    color: 'black',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n})\n\nexport default singlechat\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAElD,SAASC,SAAS,QAAQ,8BAA8B;AACxD,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,SAASC,UAAU,GAAG;EACpB,gBAAoCJ,QAAQ,CAACI,UAAU,CAAC;IAAA;IAAjDA,UAAU;IAAEC,aAAa;AA2ClC;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDC,KAAK,EAAE;IACLC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDC,KAAK,EAAE;IACLH,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBG,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE,YAAY;IACvBC,UAAU,EAAE;EACd,CAAC;EACDC,KAAK,EAAE;IACLC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,GAAG;IACVb,QAAQ,EAAE,EAAE;IACZc,KAAK,EAAE;EACT,CAAC;EACDC,KAAK,EAAE;IACLf,QAAQ,EAAE,EAAE;IACZc,KAAK,EAAE;EACT,CAAC;EACDE,MAAM,EAAE;IACNlB,eAAe,EAAE,OAAO;IACxBmB,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBR,YAAY,EAAE,CAAC;IACfN,SAAS,EAAE,EAAE;IACbU,KAAK,EAAE;EACT,CAAC;EACDK,UAAU,EAAE;IACVL,KAAK,EAAE,OAAO;IACdd,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,eAAeZ,UAAU"},"metadata":{},"sourceType":"module"}